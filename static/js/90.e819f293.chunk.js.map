{"version":3,"file":"static/js/90.e819f293.chunk.js","mappings":"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","sources":["components/StudentPages/FaceDetector.jsx","components/StudentPages/AttendanceSelectImageModal.jsx","components/StudentPages/AttendanceConfig.jsx","components/StudentPages/Attendance.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport { FaCamera } from \"react-icons/fa\";\r\nimport { PiCameraRotateFill } from \"react-icons/pi\";\r\nconst FaceDetector = ({ setImage,Run }) => {\r\n  const webcamRef = React.useRef(null);\r\n  const [imageUserHolder, setImageUserHolder] = useState(null);\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [mirror, setMirror] = useState(true);\r\n\r\n  const capture = React.useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImage(imageSrc);\r\n    setImageUserHolder(imageSrc);\r\n  }, [webcamRef, setImageUserHolder]);\r\n\r\n  function reCapture() {\r\n    setImage(false);\r\n    setImageUserHolder(false);\r\n  }\r\n\r\n  const [facingMode, setFacingMode] = useState(\"user\"); // 'user' for front camera, 'environment' for back camera\r\n\r\n  const switchCamera = () => {\r\n    setMirror(!mirror);\r\n    setFacingMode((prevMode) => (prevMode === \"user\" ? \"environment\" : \"user\"));\r\n  };\r\n\r\n  const isUserOnLaptop = () => {\r\n    const screenWidth = window.screen.width;\r\n    const isLaptop = screenWidth > 768; // Example threshold for screen width indicating a laptop\r\n\r\n    return isLaptop;\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkCameraPermission();\r\n  }, []);\r\n\r\n  const checkCameraPermission = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      // Permission granted\r\n      stream.getTracks().forEach((track) => track.stop()); // Stop the stream\r\n      setHasPermission(true);\r\n    } catch (error) {\r\n      // Permission denied or some error occurred\r\n      setHasPermission(false);\r\n    }\r\n  };\r\n\r\n  const handleAllowPermission = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      // Permission granted after clicking the button\r\n      stream.getTracks().forEach((track) => track.stop()); // Stop the stream\r\n      setHasPermission(true);\r\n    } catch (error) {\r\n      // Permission still denied after attempting to grant\r\n      setHasPermission(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"h-[380px]\">\r\n      {hasPermission === true ? (\r\n        <div className=\"\">\r\n          {imageUserHolder ? (\r\n            <div className=\"grid justify-center\">\r\n              <img\r\n                src={imageUserHolder}\r\n                alt=\"Captured selfie\"\r\n                className=\"max-h-[300px] rounded-md shadow-md shadow-black\"\r\n              />\r\n              <button\r\n                onClick={() => reCapture()}\r\n                className=\"flex text-center justify-center  items-center gap-1 w-full bg-blue-950 text-white mt-3 p-1 rounded-md \"\r\n              >\r\n                <FaCamera className=\"text-[20px]\" />\r\n                Re-Capture\r\n              </button>\r\n              <button\r\n                onClick={() => Run()}\r\n                className=\"flex text-center justify-center  items-center gap-1 w-full bg-blue-700 text-white mt-1 mb-3 p-1 rounded-md\"\r\n              >\r\n                UPLOAD\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex flex-col items-center h-[300px]\">\r\n              <Webcam\r\n                audio={false}\r\n                ref={webcamRef}\r\n                screenshotFormat=\"image/jpeg\"\r\n                mirrored={mirror} // Adjust mirror effect based on camera view\r\n                videoConstraints={{ facingMode }}\r\n                className=\"max-h-[300px] rounded-md shadow-md shadow-black \"\r\n              />\r\n              <div className=\"flex gap-5 items-center h-fit w-fit mt-3 mb-3\">\r\n                <button\r\n                  onClick={capture}\r\n                  className=\" rounded-full h-[50px] w-[50px] flex text-center justify-center  items-center gap-1 \r\n             bg-blue-950 text-white mt-2 p-1 border-4 border-slate-400 shadow-sm shadow-black\"\r\n                >\r\n                  <FaCamera className=\"text-[20px]\" />\r\n                </button>\r\n\r\n                {isUserOnLaptop() ? (\r\n                  \"\"\r\n                ) : (\r\n                  <button\r\n                    onClick={switchCamera}\r\n                    className=\" rounded-full h-[50px] w-[50px] flex text-center justify-center  items-center gap-1 \r\n             bg-blue-800 text-white mt-2 p-1 \"\r\n                  >\r\n                    <PiCameraRotateFill className=\"text-[20px]\" />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {hasPermission === false && (\r\n            <div className=\"grid gap-1 justify-center\">\r\n              <p>Please Allow the Camera Permission to Time In.</p>\r\n              <button onClick={handleAllowPermission}>\r\n                Click to Allow Camera Permission\r\n              </button>\r\n            </div>\r\n          )}\r\n          {hasPermission === null && <p>Checking camera permission...</p>}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceDetector;\r\n","import React, { useEffect, useState, Component } from \"react\";\nimport moment from \"moment\";\nimport supabase from \"../iMonitorDBconfig\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { BeatLoader } from \"react-spinners\";\nimport FaceDetector from \"./FaceDetector\";\n\nconst AttendanceSelectImageModal = ({\n  visible,\n  attendanceinfo,\n  onClose,\n  uuid,\n  setIn,\n  companyTime,\n}) => {\n  const [file, setFile] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [image, setImage] = useState();\n\n  let IN;\n\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState();\n\n  const Run = async () => {\n    if (image === false) {\n      toast.warn(\"No Image Detected\", {\n        position: \"top-right\",\n        autoClose: 1000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n    } else {\n      setUploading(true);\n      document.getElementById(\"xButton\").hidden = true;\n\n      const base64Image = image.split(\",\")[1]; // Extract base64 data\n      const file = base64toFile(image, \"selfie.jpg\");\n\n      const { data } = await supabase.storage\n        .from(\"StudentUploadedImages\")\n        .upload(\n          attendanceinfo.studemail + \"/\" + `user_selfies_${Date.now()}.jpg`,\n          file,\n          {\n            cacheControl: \"3600\",\n            contentType: \"image/jpeg\", // Specify content type\n          }\n        );\n      timein();\n    }\n  };\n\n  // Function to convert base64 to File object\n  const base64toFile = (base64String, filename) => {\n    const arr = base64String.split(\",\");\n    if (arr.length < 2) {\n      throw new Error(\"Invalid base64 string format\");\n    }\n\n    const mime = arr[0].match(/:(.*?);/)[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, { type: mime });\n  };\n\n  function clear() {\n    onClose();\n    setFile(null);\n    setImage(false);\n  }\n\n  // apply this to onlick IN Button\n  function timein() {\n    var momentTime = moment();\n    var seconds = momentTime.hours() * 3600 + momentTime.minutes() * 60;\n\n    IN = seconds;\n    attendance();\n  }\n\n  var currTime = moment();\n\n  const attendance = async () => {\n    var compStart = moment(companyTime.startimgtime, \"HH:mm:ss\");\n    var compStartAdjustedBy_Minus_1Hour = compStart\n      .clone()\n      .subtract(1, \"hours\");\n\n    var status;\n\n    if (\n      compStart.isSameOrAfter(compStartAdjustedBy_Minus_1Hour) &&\n      currTime.isBefore(compStart)\n    ) {\n      status = \"ON TIME\";\n    } else {\n      status = \"LATE\";\n    }\n\n    const { data, error } = await supabase\n      .from(\"AttendanceTable\")\n      .update({ studin: IN, status: status })\n      .eq(\"id\", attendanceinfo.id);\n\n    if (data) {\n      setUploading(false);\n    }\n    toast.success(\"Successfully Uploaded\", {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"light\",\n    });\n    setIn(true);\n    setTimeout(() => {\n      setUploading(false);\n      document.getElementById(\"xButton\").hidden = false;\n      onClose();\n      setImage();\n      // window.location.reload();\n    }, 900);\n  };\n\n  if (!visible) return null;\n  return (\n    <div className=\"fixed h-screen inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex justify-center items-center z-50\">\n      <div\n        className=\"bg-[#dddede]  md:w-[30%] w-[99%] rounded-xl flex flex-col \"\n        data-aos=\"zoom-in\"\n        data-aos-duration=\"300\"\n      >\n        <button\n          id=\"xButton\"\n          onClick={() => clear()}\n          className=\"bg-red-600 w-14 rounded-tl-md\"\n        >\n          X\n        </button>\n        <div className=\" items-center grid  \">\n          {uploading ? (\n            <div className=\" justify-center flex-col flex items-center p-4\">\n              <div className=\"font-semibold text-blue-500 flex\">\n                Image is uploading please wait{\" \"}\n              </div>\n              <BeatLoader color=\"#4d9eff\" size={10} />\n            </div>\n          ) : (\n            <div className=\"mb-10\">\n              <p className=\"font-semibold text-lg mb-4 text-center\">\n                Upload your image here to time in\n              </p>\n              <FaceDetector setImage={setImage} Run={Run} />\n            </div>\n          )}\n        </div>\n      </div>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        limit={1}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </div>\n  );\n};\n\nexport default AttendanceSelectImageModal;\n","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport AttendanceSelectImageModal from \"./AttendanceSelectImageModal\";\r\nimport supabase from \"../iMonitorDBconfig\";\r\n\r\nconst AttendanceConfig = ({ attendanceinfo, companyinfo, studinfo, index }) => {\r\n  const [showmodaluploadimage, setShowModalUploadImage] = useState(false);\r\n  const handlecloseuploadimage = () => setShowModalUploadImage(false);\r\n\r\n  const [In, setIn] = useState(true);\r\n  const [Out, setOut] = useState(true);\r\n\r\n  const [companyTime, setCompanyTime] = useState();\r\n\r\n  var currDateFull = moment().format(\"l\");\r\n  var currTime = moment();\r\n  let [uuid, setUuid] = useState();\r\n\r\n  useEffect(() => {\r\n    datechecker();\r\n\r\n    const intervalId = setInterval(datechecker(), 60000);\r\n    return () => clearInterval(intervalId);\r\n  }, [attendanceinfo]);\r\n\r\n  function datechecker() {\r\n    var format = moment(attendanceinfo.studDate).format(\"l\");\r\n\r\n    for (let index = 0; index < companyinfo.length; index++) {\r\n      if (studinfo.companyname === companyinfo[index].companyname) {\r\n        setCompanyTime({\r\n          startimgtime: companyinfo[index].startingtime,\r\n          endingtime: companyinfo[index].endingtime,\r\n        });\r\n        var compEnd = moment(companyinfo[index].endingtime, \"HH:mm:ss\");\r\n        if (format === currDateFull) {\r\n          if (attendanceinfo.studin === null) {\r\n            if (currTime.isAfter(compEnd)) {\r\n              setIn(true);\r\n              return;\r\n            }\r\n            setIn(false);\r\n          } else {\r\n            if (currTime.isAfter(compEnd)) {\r\n              setOut(false);\r\n              return;\r\n            }\r\n            if (attendanceinfo.studout !== null) {\r\n              setOut(true);\r\n              return;\r\n            }\r\n            setOut(false);\r\n          }\r\n        }\r\n        return;\r\n      }\r\n    }\r\n\r\n    setUuid(Math.ceil(Math.random() * 99999999));\r\n  }\r\n\r\n  let OUT;\r\n  // apply this to onlick OUT Button\r\n  function timeout() {\r\n    var momentTime = moment();\r\n    var seconds = momentTime.hours() * 3600 + momentTime.minutes() * 60;\r\n    OUT = seconds;\r\n    toHoursAndMinutes();\r\n  }\r\n\r\n  // add the date to the current in studentinforamtion studprgoress + hours\r\n  function toHoursAndMinutes() {\r\n    if (attendanceinfo.studin !== null && OUT !== null) {\r\n      let a = OUT - attendanceinfo.studin;\r\n      let hours = Math.floor(a / 3600);\r\n      let minutes = (a % 3600) / 60;\r\n\r\n      // if hours greater than 9 set it to 9 hours\r\n      if (hours > 9) {\r\n        hours = 8;\r\n      }\r\n      studinfoData(hours);\r\n    }\r\n  }\r\n\r\n  const studinfoData = async (hours) => {\r\n    const { data, error } = await supabase\r\n      .from(\"StudentInformation\")\r\n      .select()\r\n      .eq(\"studemail\", attendanceinfo.studemail)\r\n      .single();\r\n    if (data) {\r\n      let progress = data.studprogress;\r\n      let result = progress + hours;\r\n      const { data1, error } = await supabase\r\n        .from(\"StudentInformation\")\r\n        .update({ studprogress: result })\r\n        .eq(\"studemail\", attendanceinfo.studemail);\r\n\r\n      attendance();\r\n    }\r\n  };\r\n\r\n  const attendance = async () => {\r\n    const { data, error } = await supabase\r\n      .from(\"AttendanceTable\")\r\n      .update({ studout: OUT })\r\n      .eq(\"id\", attendanceinfo.id);\r\n\r\n    setOut(true);\r\n  };\r\n\r\n  function secondsToHours(seconds) {\r\n    const hours = seconds / 3600; // There are 3600 seconds in an hour (60 seconds * 60 minutes)\r\n    return hours;\r\n  }\r\n\r\n  const computeTotalHours = (timeIN, timOUT) => {\r\n    const hours = Math.floor(secondsToHours(timOUT - timeIN));\r\n    if (timeIN !== null && timOUT !== null) {\r\n      return hours;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/*  */}\r\n      <div\r\n        className={`${\r\n          index === 0\r\n            ? \"p-2 duration-300 shadow-black shadow-md bg-white mb-4 \"\r\n            : \"bg-gray-400  mb-0.5\"\r\n        }  rounded-md flex p-1 justify-between z-0`}\r\n      >\r\n        <p className=\"text-left m-2 pl-2 font-semibold text-[17px]\">\r\n          {attendanceinfo.studDate + \"\"}\r\n        </p>\r\n        <div className=\"\">\r\n          {currDateFull === moment(attendanceinfo.studDate).format(\"l\") ? (\r\n            <>\r\n              <button\r\n                disabled={In}\r\n                onClick={() => setShowModalUploadImage(true)}\r\n                className={`${\r\n                  In\r\n                    ? `h-10 w-24 rounded-md  bg-gray-600 text-center mr-2 hover:cursor-not-allowed`\r\n                    : \"h-10 w-24 rounded-md hover:bg-green-400 bg-green-600 text-center mr-2 hover:cursor-pointer\"\r\n                }`}\r\n              >\r\n                {/* h-10 w-24 rounded-md  bg-gray-600 text-center mr-2 hover:cursor-not-allowed */}\r\n                TIME IN\r\n              </button>\r\n\r\n              <button\r\n                disabled={Out}\r\n                onClick={() => timeout()}\r\n                className={`${\r\n                  Out\r\n                    ? \"h-10 w-24 rounded-md  bg-gray-600 text-center mr-2 hover:cursor-not-allowed\"\r\n                    : \"h-10 w-24 rounded-md hover:bg-red-400 bg-red-600 text-center mr-2 hover:cursor-pointer\"\r\n                }`}\r\n              >\r\n                TIME OUT\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <div className=\"items-center flex h-full mr-5 font-thin gap-1\">\r\n              Total hours rendered:\r\n              <div className=\"font-thin\">\r\n                {computeTotalHours(\r\n                  attendanceinfo.studin,\r\n                  attendanceinfo.studout\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <AttendanceSelectImageModal\r\n        attendanceinfo={attendanceinfo}\r\n        onClose={handlecloseuploadimage}\r\n        visible={showmodaluploadimage}\r\n        uuid={uuid}\r\n        setIn={setIn}\r\n        companyTime={companyTime}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceConfig;\r\n","import React, { useEffect, useState } from \"react\";\nimport supabase from \"../iMonitorDBconfig\";\nimport moment from \"moment\";\nimport AOS, { refresh } from \"aos\";\nimport \"aos/dist/aos.css\";\nimport { GiDiploma } from \"react-icons/gi\";\nimport AttendanceConfig from \"./AttendanceConfig\";\nimport { TailSpin } from \"react-loader-spinner\";\nimport FaceDetector from \"./FaceDetector\";\n\nconst Attendance = ({ studemail }) => {\n  // CONDITIONAL VARIABLES\n  var starter = false;\n\n  const [ojtfinished, setojtfinished] = useState(false);\n  const [ojtnotstarted, setojtnotstarted] = useState(false);\n\n  // DATA VARIABLES\n  const [attendanceinfo, setAttendanceinfo] = useState([]);\n  const [studprog, setStudProg] = useState(\"\");\n  const [studmaxprog, setStudMaxProg] = useState(\"\");\n\n  var currDateFull = moment(new Date()).format(\"l\");\n  // Fetch Info's\n  const [companyinfo, setCompanyInfo] = useState();\n  const [studinfo, setStudInfo] = useState();\n\n  // specific\n  const [companyinfoTime, setCompanyInfoTime] = useState();\n\n  useEffect(() => {\n    AOS.init({ duration: 1000 });\n\n    fetchstudinfo();\n\n    supabase\n      .channel(\"custom-all-channel\")\n      .on(\n        \"postgres_changes\",\n        { event: \"UPDATE\", schema: \"public\", table: \"AttendanceTable\" },\n        (payload) => {\n          fetchstudinfo();\n        }\n      )\n      .on(\n        \"postgres_changes\",\n        { event: \"INSERT\", schema: \"public\", table: \"AttendanceTable\" },\n        (payload) => {\n          fetchstudinfo();\n        }\n      )\n      .subscribe();\n  }, [studemail]);\n\n  // STUDENT INFORMATION TABLE\n  const fetchstudinfo = async () => {\n    let { data } = await supabase\n      .from(\"StudentInformation\")\n      .select()\n      .eq(\"studemail\", studemail)\n      .single();\n\n    if (data) {\n      setStudInfo(data);\n      setStudProg(data.studprogress);\n      setStudMaxProg(data.studmaxprogress);\n\n      var end = moment(data.ojtend).format(\"L\");\n      var start = moment(data.ojtstart).format(\"L\");\n\n      // Get the current date\n      const currentDate = moment();\n      const hasStarted = currentDate.isSameOrAfter(start);\n      const hasEnded = currentDate.isAfter(end);\n      const hasNotStarted = currentDate.isBefore(start);\n\n      // Output the results\n      if (hasStarted) {\n        FetchAttendanceInfo();\n\n        starter = true;\n      }\n      if (hasEnded) {\n        setojtfinished(true);\n        starter = false;\n        console.log(\"2\");\n      }\n      // Output the result\n      if (hasNotStarted) {\n        console.log(\"3\");\n        setojtnotstarted(true);\n      }\n      fetchcompanyinfo();\n    }\n  };\n\n  // COMPANY INFORMATION TABLE\n  async function fetchcompanyinfo() {\n    let { data: CompanyTable, error } = await supabase\n      .from(\"CompanyTable\")\n      .select();\n\n    setCompanyInfo(CompanyTable);\n  }\n\n  const DataInsertInAttendance = async (info) => {\n    await supabase.from(\"AttendanceTable\").insert({\n      studemail: studemail,\n      studDate: currDateFull,\n      course: info?.studcourse,\n      studname: info?.studname,\n    });\n  };\n\n  // DATA in attendance Table\n  const FetchAttendanceInfo = async () => {\n    try {\n      let { data: attenInfo, error } = await supabase\n        .from(\"AttendanceTable\")\n        .select()\n        .eq(\"studemail\", studemail);\n\n      const { data: info } = await supabase\n        .from(\"StudentInformation\")\n        .select()\n        .eq(\"studemail\", studemail)\n        .single();\n\n      const { data: compInfo } = await supabase\n        .from(\"CompanyTable\")\n        .select()\n        .eq(\"companyname\", info.companyname)\n        .single();\n      setCompanyInfoTime(await compInfo);\n      setAttendanceinfo(await attenInfo);\n\n      if (attenInfo.length === 0) {\n        DataInsertInAttendance(info);\n      } else {\n        // for (let index = 0; index < attenInfo.length; index++) {\n        //   var date = moment(attenInfo[index].studDate).format(\"l\");\n\n        //   if (currDateFull === date) {\n        //     return setAttendanceinfo(attenInfo);\n        //   }\n        // }\n        // DataInsertInAttendance(info);\n\n        let isCurrDateExisting = false;\n\n        for (let index = 0; index < attenInfo.length; index++) {\n          var date = moment(attenInfo[index].studDate).format(\"l\");\n\n          if (currDateFull === date) {\n            setAttendanceinfo(attenInfo);\n            isCurrDateExisting = true;\n            break; // No need to continue checking, we found a match\n          }\n        }\n\n        if (!isCurrDateExisting) {\n          DataInsertInAttendance(info);\n        }\n      }\n    } catch (error) {}\n  };\n\n  const timeConverter = (time) => {\n    return moment(time, \"HH:mm\").format(\"hh:mm A\");\n  };\n\n  const MinusAnHourConverter = (time) => {\n    const updatedTime = moment(time, \"HH:mm\")\n      .subtract(1, \"hours\")\n      .format(\"hh:mm A\");\n\n    return updatedTime;\n  };\n\n  const test = () => {\n    function fillMissingDates(startDate, endDate) {\n      const startMoment = moment(startDate, \"MMMM D, YYYY\");\n      const endMoment = moment(endDate, \"MMMM D, YYYY\");\n      const today = moment().startOf(\"day\");\n\n      const filledDates = [];\n      let currentDate = moment(startMoment);\n\n      while (\n        currentDate.isSameOrBefore(today) &&\n        currentDate.isSameOrBefore(endMoment)\n      ) {\n        filledDates.push(currentDate.format(\"MMMM D, YYYY\"));\n        currentDate.add(1, \"day\");\n      }\n\n      return filledDates;\n    }\n\n    const parsedDates = attendanceinfo.map((date) => moment(date.studDate));\n\n    // Find the oldest date using the spread operator and Math.min\n    const oldestDate = moment.min(...parsedDates);\n\n    const today = moment();\n    const startDate = moment().startOf(\"month\").format(\"MMMM D, YYYY\");\n\n    const endDate = moment(attendanceinfo.studDate).format(\"MMMM D, YYYY\");\n    console.log(startDate);\n    console.log(oldestDate.format(\"MMMM D, YYYY\"));\n    const newArray = fillMissingDates(startDate, endDate);\n\n    console.log(newArray);\n  };\n\n  return (\n    <div className=\" \">\n      {attendanceinfo && companyinfo ? (\n        <div className=\"flex md:w-[100%] w-full justify-center\">\n          <div\n            className=\"mt-[5%]\"\n            data-aos=\"fade-down\"\n            data-aos-duration=\"1000\"\n          >\n            <div\n              onClick={() => test()}\n              className=\"font-bold text-white text-4xl flex ml-[5%] md:mt-1 mt-5 mb-5\"\n            >\n              ATTENDANCE\n            </div>\n            <div className=\" w-fit ml-5 mr-5 shadow-md shadow-black\">\n              <div className=\"md:w-[500px] w-full h-[450px] rounded-t-md bg-slate-200 rounded-b-md\">\n                <div className=\"w-full bg-[#274472] rounded-t-md p-2 flex-col md:gap-10 gap-1\">\n                  <div className=\"mt-3 mb-3 flex text-white\">\n                    <div className=\"md:text-[15px] text-[10px] text-center font-semibold  mr-2\">\n                      OJT DURATION:\n                      <div\n                        className={` whitespace-nowrap z-0 md:text-[15px] text-[10px] font-mono font-light mr-3 `}\n                      >\n                        {studprog} / {studmaxprog}\n                      </div>\n                    </div>\n\n                    <div className=\" w-[70%] bg-gray-100 rounded-sm  md:h-10 h-7 \">\n                      <div\n                        className=\" md:h-10 h-7 w-[1%] bg-[#78D0F4] rounded-sm  \"\n                        style={{\n                          width: `${(studprog / studmaxprog) * 100}%`,\n                        }}\n                      ></div>\n                    </div>\n                  </div>\n                </div>\n                {/*  Attendance */}\n                {ojtfinished && (\n                  <div className=\"\">\n                    <div className=\"font-bold text-[25px] text-center mt-[22%]\">\n                      YOUR OJT IS FINISHED\n                    </div>\n                    <GiDiploma className=\"text-8xl ml-[40%] text-center\" />\n                  </div>\n                )}\n                {ojtnotstarted && (\n                  <div className=\"justify-center flex flex-col\">\n                    <div className=\"font-bold text-[25px] justify-center text-center mt-[20%]\">\n                      YOUR OJT HAVEN'T STARTED YET\n                    </div>\n                    <div\n                      data-tip=\"Your Attendance will be shown when the OJT starts\"\n                      className=\"hover:text-blue-600 hover:cursor-help text-blue-900 font-semibold underline justify-center text-center\n  \n                      before:text-sm\n                      before:content-[attr(data-tip)]\n                      before:absolute\n                      before:px-3 before: py-2\n                      before:left/1 before: top-3\n                      before:w-max before:max-w-xs\n                      before:-translate-x-1/3 before:-translate-y-full\n                    before:bg-gray-200 before:text-black\n                    before:border-black\n                      before:border-2\n                      before:rounded-md before:opacity-0\n                      before:transition-all\n                      hover:before:opacity-100\"\n                    >\n                      Learn More\n                    </div>\n                  </div>\n                )}\n\n                {ojtnotstarted === true || ojtfinished === true ? (\n                  \"\"\n                ) : (\n                  <div>\n                    <div className=\"flex justify-center items-center font-thin text-[12px]\">\n                      <div className=\"bg-green-100 w-full p-1 justify-center flex gap-1\">\n                        Time in starts\n                        <em className=\"font-normal\">\n                          {MinusAnHourConverter(companyinfoTime?.startingtime)}{\" \"}\n                          - {timeConverter(companyinfoTime?.startingtime)}\n                        </em>{\" \"}\n                        only\n                      </div>\n                      <div className=\"bg-red-100 w-full p-1 justify-center flex gap-1\">\n                        Time out ends\n                        <em className=\"font-normal\">\n                          {timeConverter(companyinfoTime?.endingtime)}\n                        </em>\n                      </div>\n                    </div>\n                    {companyinfo && (\n                      <div className=\"p-2 h-[335px] rounded-md overflow-y-auto\">\n                        {attendanceinfo\n                          .sort((a, b) => (a.studDate < b.studDate ? 1 : -1))\n                          .map((attendanceinfo, index) => (\n                            <AttendanceConfig\n                              key={attendanceinfo.id}\n                              attendanceinfo={attendanceinfo}\n                              studinfo={studinfo}\n                              companyinfo={companyinfo}\n                              index={index}\n                            />\n                          ))}\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                {/* Attendance */}\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"flex flex-col items-center justify-center h-[90%]\">\n          <TailSpin\n            height=\"80\"\n            width=\"80\"\n            color=\"#0074B7\"\n            ariaLabel=\"tail-spin-loading\"\n            radius=\"0\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Attendance;\n"],"names":["_ref","setImage","Run","webcamRef","React","_useState","useState","_useState2","_slicedToArray","imageUserHolder","setImageUserHolder","_useState3","_useState4","hasPermission","setHasPermission","_useState5","_useState6","mirror","setMirror","capture","imageSrc","current","getScreenshot","_useState7","_useState8","facingMode","setFacingMode","useEffect","checkCameraPermission","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","navigator","mediaDevices","getUserMedia","video","sent","getTracks","forEach","track","stop","t0","apply","arguments","handleAllowPermission","_ref3","_callee2","_context2","_jsx","className","children","_jsxs","src","alt","onClick","FaCamera","Webcam","audio","ref","screenshotFormat","mirrored","videoConstraints","window","screen","width","prevMode","PiCameraRotateFill","_Fragment","IN","visible","attendanceinfo","onClose","setIn","uuid","companyTime","setFile","uploading","setUploading","image","_useState9","_useState10","_file","_yield$supabase$stora","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","document","getElementById","hidden","split","file","base64toFile","supabase","storage","from","upload","studemail","concat","Date","now","cacheControl","contentType","data","timein","base64String","filename","arr","length","Error","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","type","momentTime","moment","seconds","hours","minutes","attendance","currTime","compStart","compStartAdjustedBy_Minus_1Hour","status","_yield$supabase$from$","startimgtime","clone","subtract","isSameOrAfter","isBefore","update","studin","eq","id","error","success","setTimeout","BeatLoader","color","size","FaceDetector","ToastContainer","limit","newestOnTop","rtl","pauseOnFocusLoss","OUT","companyinfo","studinfo","index","showmodaluploadimage","setShowModalUploadImage","In","Out","setOut","setCompanyTime","currDateFull","format","setUuid","datechecker","studDate","companyname","startingtime","endingtime","compEnd","isAfter","studout","Math","ceil","random","timeout","a","floor","studinfoData","toHoursAndMinutes","intervalId","setInterval","clearInterval","result","_yield$supabase$from$2","select","single","studprogress","data1","_x","_yield$supabase$from$3","disabled","timeIN","timOUT","computeTotalHours","AttendanceSelectImageModal","ojtfinished","setojtfinished","ojtnotstarted","setojtnotstarted","setAttendanceinfo","studprog","setStudProg","studmaxprog","setStudMaxProg","_useState11","_useState12","setCompanyInfo","_useState13","_useState14","setStudInfo","_useState15","_useState16","companyinfoTime","setCompanyInfoTime","AOS","duration","fetchstudinfo","channel","on","event","schema","table","payload","subscribe","end","start","currentDate","hasStarted","hasEnded","hasNotStarted","studmaxprogress","ojtend","ojtstart","FetchAttendanceInfo","console","log","fetchcompanyinfo","_fetchcompanyinfo","_callee4","_yield$supabase$from$5","CompanyTable","_context4","time","DataInsertInAttendance","info","insert","course","studcourse","studname","_ref4","_callee3","attenInfo","_yield$supabase$from$4","compInfo","isCurrDateExisting","date","_context3","t1","t2","t3","abrupt","t4","timeConverter","parsedDates","map","oldestDate","_toConsumableArray","startDate","startOf","endDate","newArray","startMoment","endMoment","today","filledDates","isSameOrBefore","push","add","fillMissingDates","test","style","GiDiploma","sort","b","AttendanceConfig","TailSpin","height","ariaLabel","radius","wrapperStyle","wrapperClass"],"sourceRoot":""}