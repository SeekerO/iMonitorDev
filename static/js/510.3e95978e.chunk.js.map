{"version":3,"file":"static/js/510.3e95978e.chunk.js","mappings":"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","sources":["components/AdminPages/AdminConfig.jsx","components/AdminPages/AdminAccounts.jsx"],"sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport { AiOutlineStop, AiFillCheckCircle } from \"react-icons/ai\";\nimport supabase from \"../iMonitorDBconfig\";\n\nfunction AdminConfig({ admin }) {\n  async function ChangeStatus() {\n    if (admin.status === \"active\") {\n      const { data, error } = await supabase\n        .from(\"AdminAccount\")\n        .update({ status: \"deactivate\" })\n        .eq(\"id\", admin.id)\n        .select();\n    } else {\n      const { data, error } = await supabase\n        .from(\"AdminAccount\")\n        .update({ status: \"active\" })\n        .eq(\"id\", admin.id)\n        .select();\n    }\n  }\n  return (\n    <div\n      key={admin.id}\n      className=\"grid grid-cols-4 w-[100%] p-1 bg-slate-200 hover:bg-blue-200 cursor-pointer\"\n    >\n      <label className=\"cursor-pointer flex items-center justify-center\">\n        {admin.username}\n      </label>\n      <label className=\"cursor-pointer flex items-center justify-center\">\n        {moment(admin.created_at).format(\"ll\")}\n      </label>\n      <label\n        className={`${\n          admin.status === \"active\"\n            ? \"text-green-700 cursor-pointer flex items-center justify-center\"\n            : \"text-red-500 cursor-pointer flex items-center justify-center\"\n        }`}\n      >\n        {admin.status.toUpperCase()}\n      </label>\n      {admin.username === \"admin\" ? (\n        \"\"\n      ) : (\n        <a\n          onClick={() => ChangeStatus()}\n          className=\"cursor-pointer flex items-center justify-center\"\n        >\n          {admin.status === \"active\" ? (\n            <AiOutlineStop className=\"hover:text-red-500 text-red-500 bg-white rounded-full hover:shadow-md hover:shadow-black\" />\n          ) : (\n            <AiFillCheckCircle className=\"hover:text-green-100 text-white bg-green-500 rounded-full hover:shadow-md hover:shadow-black\" />\n          )}\n        </a>\n      )}\n    </div>\n  );\n}\n\nexport default AdminConfig;\n","import React, { useEffect, useState } from \"react\";\nimport supabase from \"../iMonitorDBconfig\";\nimport AdminConfig from \"./AdminConfig\";\nimport { toast } from \"react-toastify\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\n\nfunction AdminAccounts() {\n  const [AdminData, setAdminData] = useState();\n\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [confirmpassword, setConfirmPassword] = useState();\n  const [usernameExist, setUsernameExist] = useState();\n\n  useEffect(() => {\n    FetchAdminData();\n    const AdminAccount = supabase\n      .channel(\"custom-all-channel\")\n      .on(\n        \"postgres_changes\",\n        { event: \"*\", schema: \"public\", table: \"AdminAccount\" },\n        (payload) => {\n          FetchAdminData();\n        }\n      )\n      .subscribe();\n  }, []);\n\n  async function FetchAdminData() {\n    const { data: adminData } = await supabase.from(\"AdminAccount\").select(\"*\");\n    setAdminData(adminData);\n  }\n\n  const CreateAdminAccount = async () => {\n    if (!username || !password || !confirmpassword) {\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast.warn(\"Password doesn't match\", {\n        position: \"top-right\",\n        autoClose: 1000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n      return;\n    }\n    for (let index = 0; index < AdminData.length; index++) {\n      if (AdminData[index].username === username) {\n        setUsernameExist(\"Please use another username\");\n        return;\n      }\n    }\n    const { data: create } = await supabase\n      .from(\"AdminAccount\")\n      .insert([\n        { username: username, password: confirmpassword, status: \"active\" },\n      ]);\n\n    toast.success(\"Created Successfully!\", {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"light\",\n    });\n\n    setUsername(\"\");\n    setPassword(\"\");\n    setConfirmPassword(\"\");\n  };\n  const TypeUserName = (e) => {\n    setUsername(e.target.value);\n  };\n\n  return (\n    <>\n      <div className=\" w-[100%] h-screen \">\n        <div className=\" w-[100%] h-[90%] gap-2 gap-y-10 grid grid-cols-1 md:grid-cols-2 md:p-10 p-1 place-content-center items-center overflow-auto  pt-[23%]\">\n          <div className=\"w-[100%]  h-[100%]  bg-[#94b8d8]  rounded-md\">\n            <div className=\"bg-[#274472] flex justify-center font-bold  text-[25px] p-1  rounded-t-md mb-2 text-white\">\n              CREATE ADMIN ACCOUNT\n            </div>\n            <form\n              onSubmit={() => CreateAdminAccount()}\n              className=\"p-2 h-[75.5%] pt-[1%] \"\n            >\n              <div className=\"flex-col gap-2 mb-2\">\n                <label className=\"text-[18px] font-semibold\">\n                  UserName:{\" \"}\n                  <em className=\"text-[14px] text-red-500\">{usernameExist}</em>\n                </label>\n\n                <input\n                  value={username}\n                  type=\"text\"\n                  onChange={(e) => TypeUserName(e)}\n                  required\n                  placeholder=\"Enter UserName\"\n                  className=\"bg-slate-200 w-[100%] p-1 rounded-md\"\n                />\n              </div>\n\n              <div className=\"flex-col gap-2 mb-2 \">\n                <label className=\"text-[18px] font-semibold\">Password: </label>\n                <input\n                  value={password}\n                  type=\"password\"\n                  required\n                  onChange={(e) => setPassword(e.target.value)}\n                  placeholder=\"Enter Password\"\n                  className=\"bg-slate-200 w-[100%] p-1 rounded-md\"\n                ></input>\n              </div>\n              <div className=\"flex-col gap-2 mb-2\">\n                <label className=\"text-[18px] font-semibold\">\n                  Confirm Password:\n                </label>\n                <input\n                  value={confirmpassword}\n                  type=\"Password\"\n                  required\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  placeholder=\"Re-Enter Password\"\n                  className=\"bg-slate-200 w-[100%] p-1 rounded-md\"\n                ></input>\n              </div>\n              <button className=\"bg-[#274472] hover:bg-[#3971a5] w-[100%] p-2 bottom-0 rounded-b-md font-semibold text-white\">\n                CREATE\n              </button>\n            </form>\n          </div>\n          <div className=\"w-[100%] h-[100%] bg-[#94b8d8] rounded-md flex-col \">\n            <div className=\" bg-[#274472] text-white flex justify-center font-bold  text-[25px] p-1  rounded-t-md mb-2\">\n              CREATED ADMIN ACCOUNT'S\n            </div>\n            <div className=\"grid grid-cols-4 p-1 font-semibold text-[17px] \">\n              <label className=\"cursor-pointer flex items-center justify-center\">\n                UserName\n              </label>\n              <label className=\"cursor-pointer flex items-center justify-center\">\n                {\" \"}\n                Created Date\n              </label>\n              <label className=\"cursor-pointer flex items-center justify-center\">\n                Status\n              </label>\n              <label className=\"cursor-pointer flex items-center justify-center\">\n                Edit Status\n              </label>\n            </div>\n            {AdminData ? (\n              <div className=\"h-[295px] overflow-auto\">\n                {AdminData.sort((a, b) => (a.status <= b.status ? -1 : 1)).map(\n                  (admin) => (\n                    <AdminConfig key={admin.id} admin={admin} />\n                  )\n                )}\n              </div>\n            ) : (\n              <div className=\"flex place-content-center items-center h-[295px]  font-bold underline\">\n                There is something wrong with the connection\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AdminAccounts;\n"],"names":["_ref","admin","_ChangeStatus","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$supabase$from$","_yield$supabase$from$2","wrap","_context","prev","next","status","supabase","from","update","eq","id","select","sent","data","error","stop","apply","arguments","_jsxs","className","children","_jsx","username","moment","created_at","format","concat","toUpperCase","onClick","ChangeStatus","AiOutlineStop","AiFillCheckCircle","_useState","useState","_useState2","_slicedToArray","AdminData","setAdminData","_useState3","_useState4","setUsername","_useState5","_useState6","password","setPassword","_useState7","_useState8","confirmpassword","setConfirmPassword","_useState9","_useState10","usernameExist","setUsernameExist","FetchAdminData","_FetchAdminData","_callee2","adminData","_context2","useEffect","channel","on","event","schema","table","payload","subscribe","CreateAdminAccount","index","abrupt","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","length","insert","success","_Fragment","onSubmit","value","type","onChange","e","target","TypeUserName","required","placeholder","sort","a","b","map","AdminConfig"],"sourceRoot":""}