{"version":3,"file":"static/js/507.b5a1cbdf.chunk.js","mappings":"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","sources":["components/Company/ViewStudData.jsx","components/Company/StudentData.jsx","components/Company/ViewCompanyModal.jsx","components/Company/CompanyConfig.jsx","components/Company/PdfLayout.jsx","components/Company/Analytics.jsx","components/Company/Company.jsx","components/Monitoring/DateConverter.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport supabase from \"../iMonitorDBconfig\";\nimport DateConverter from \"../Monitoring/DateConverter\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { BsFillPersonLinesFill } from \"react-icons/bs\";\nimport { FaBuilding, FaFileImage } from \"react-icons/fa\";\nimport copy from \"copy-to-clipboard\";\nimport { ToastContainer, toast } from \"react-toastify\";\nexport default function ViewStudData({\n  visible,\n  onClose,\n  studinfos,\n  studemail,\n  displayColor,\n}) {\n  const [files, setFiles] = useState([]);\n\n  useEffect(() => {\n    // Call the function to fetch files from a specific folder\n    displayAvatar(studemail);\n    fetchFilesInFolder(studemail);\n  }, []);\n\n  const fetchFilesInFolder = async (folderName) => {\n    try {\n      // Fetch files from the specific folder\n      const { data, error } = await supabase.storage\n        .from(\"StudentUploadedImages\")\n        .list(folderName + \"/\", { sortBy: { column: \"name\", order: \"asc\" } });\n\n      if (error) {\n        console.error(\"Error fetching files:\", error);\n      } else {\n        // Update the state with the list of files in the folder\n        setFiles(data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching files:\", error.message);\n    }\n  };\n  function copyText(text) {\n    copy(text);\n    toast.info(`Copied: ${text}`, {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: false,\n      progress: undefined,\n      theme: \"light\",\n    });\n  }\n\n  const [avatar, setAvatar] = useState(false);\n  const [displayAvatarConfig, setDisplayAvatar] = useState();\n\n  function avatarComponent(name) {\n    return (\n      <div\n        style={{ background: displayColor }}\n        className={`flex text-white text-[50px] items-center justify-center h-[200px]  w-[200px] rounded-full font-thin shadow-md shadow-black`}\n      >{`${name.split(\" \")[0][0]}${name.split(\" \")[1][0]} `}</div>\n    );\n  }\n\n  async function displayAvatar(email) {\n    try {\n      const { data: profilePic } = await supabase.storage\n        .from(\"ProfilePic\")\n        .list(email + \"/\", { limit: 1, offset: 0 });\n\n      if (profilePic) {\n        setAvatar(true);\n\n        setDisplayAvatar(\n          `https://ouraqybsyczzrrlbvenz.supabase.co/storage/v1/object/public/ProfilePic/${email}/${profilePic[0].name}`\n        );\n      }\n    } catch (error) {\n      setAvatar(false);\n    }\n  }\n\n  function removeCourseAcro(course) {\n    const modifiedCourse = course.replace(/\\([^()]*\\)/g, \"\").trim();\n    return `(${studinfos.studsection}) ` + modifiedCourse;\n  }\n  if (!visible) return null;\n  function remark() {}\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex justify-center items-center \">\n      <div\n        className=\"bg-slate-200 h-[100%] w-[100%]  rounded-xl shadow-black shadow-2xl \"\n        data-aos=\"zoom-in\"\n        data-aos-duration=\"500\"\n      >\n        <div className=\"flex justify-end \">\n          <button\n            onClick={() => onClose(!visible)}\n            className=\"bg-red-600 w-[10%] h-[30px] rounded-br-none rounded-tr-md font-bold hover:bg-red-400 justify-center items-center flex  text-[20px]\"\n          >\n            <AiOutlineClose />\n          </button>\n        </div>\n        <div className=\" rounded-xl m-[1%] h-[90%] text-black\">\n          <form className=\" p-2 z-50 h-[98%]  rounded-xl overflow-y-scroll \">\n            <div className=\"flex-col  \">\n              <div className=\"flex flex-col justify-center place-content-center items-center mb-10\">\n                {avatar ? (\n                  <img\n                    src={displayAvatarConfig}\n                    className=\"h-[200px] w-[200px] rounded-full shadow-md shadow-black\"\n                  ></img>\n                ) : (\n                  avatarComponent(studinfos.studname)\n                )}\n                <label className=\" mt-4 md:text-lg text-base text-center font-thin text-black capitalize \">\n                  {studinfos.studname}\n                </label>\n                <label className=\" mt-2 md:text-lg text-base text-center font-thin text-black \">\n                  {removeCourseAcro(studinfos.studprogram)}\n                </label>\n                <label className=\" mt-2 md:text-lg text-base text-center font-thin text-black \">\n                  {studinfos.studemail}\n                </label>\n              </div>\n              <div className=\"h-[1px] w-[100%] bg-yellow-500 mb-4\" />\n              <div className=\"font-bold md:text-[25px] text-lg mb-3 flex gap-1 items-center\">\n                <BsFillPersonLinesFill className=\"text-[25px]\" /> STUDENT\n                INFORMATION\n              </div>\n              <p className=\"  md:text-lg text-base\">\n                STUDENT PROGRESS: {studinfos.studprogress} /{\" \"}\n                {studinfos.studmaxprogress}\n              </p>\n              <div className=\"grid md:grid-cols-2 grid-cols-1 font-thin\">\n                <label className=\" mt-4 md:text-lg text-base \">\n                  FULLNAME: {studinfos.studname}\n                </label>\n                <label className=\" mt-4 md:text-lg text-base \">\n                  PROGRAM: {studinfos.studprogram}\n                </label>\n                <label className=\" mt-4 md:text-lg text-base \">\n                  EMAIL: {studinfos.studemail}\n                </label>\n                <label className=\" mt-4 md:text-lg text-base \">\n                  SECTION: {studinfos.studsection}\n                </label>\n                <label className=\" mt-4 md:text-lg text-base \">\n                  OJT START: {studinfos.ojtstart}\n                </label>\n                <label className=\" mt-4 md:text-lg text-base \">\n                  OJT END: {studinfos.ojtend}\n                </label>\n              </div>\n              <div className=\"mt-3 flex\">\n                <label className=\"md:text-lg text-base font-thin\">\n                  REMARKS:{\" \"}\n                  <p className=\"text-base\">{remark(studinfos.remark)}</p>\n                </label>\n              </div>\n\n              <p className=\"font-bold md:text-[25px] text-lg mt-7 flex gap-1 items-center \">\n                <FaBuilding className=\"text-[20px]\" /> COMPANY INFROMATION\n              </p>\n              <div className=\"grid md:grid-cols-2 grid-cols-1 font-thin  \">\n                <label className=\" mt-4 md:text-lg text-base \">\n                  COMPANY NAME: {studinfos.companyname}\n                </label>\n                <label className=\" mt-4 md:text-lg text-base \">\n                  COMPANY ADDRESS: {studinfos.companyaddress}\n                </label>\n                <label className=\" mt-4 md:text-lg text-base \">\n                  SUPERVISOR NAME: {studinfos.supervisorname}\n                </label>\n                <label\n                  onClick={() => copyText(studinfos.supervisorcontactnumber)}\n                  className=\" mt-4 md:text-lg text-base  cursor-pointer\"\n                >\n                  SUPERVISOR CONTACT #:{\" \"}\n                  <label className=\"hover:text-blue-500 hover:underline cursor-pointer\">\n                    {studinfos.supervisorcontactnumber}\n                  </label>\n                </label>\n                <label className=\" mt-4 md:text-lg text-base \">\n                  SUPERVISOR OFFICE #: {studinfos.supervisorofficenumber}\n                </label>\n                <label className=\" mt-4 md:text-lg text-base \">\n                  COMPANY DESIGNATION: {studinfos.companydesignation}\n                </label>\n                <label\n                  onClick={() => copyText(studinfos.companyemail)}\n                  className=\" mt-4 md:text-lg text-base \"\n                >\n                  COMPANY EMAIL:{\" \"}\n                  <label className=\"hover:text-blue-500 hover:underline cursor-pointer\">\n                    {studinfos.companyemail}\n                  </label>\n                </label>\n              </div>\n            </div>\n            <div className=\"mt-10\">\n              <p className=\"font-bold md:text-lg text-base flex items-center gap-1\">\n                <FaFileImage className=\"text-[20px]\"/>Uploaded image in attendance\n              </p>\n              <div className=\"h-[300px]  bg-[#5f7caa]  mr-[1%] rounded-md overflow-y-auto\">\n                <div className=\"p-2 grid grid-cols-2\">\n                  {files.map((file) => (\n                    <div key={file.id} className=\"p-2\">\n                      <div className=\"w-[100%]\">\n                        <div className=\"flex bg-slate-300 p-1 rounded-t-md\">\n                          Uploaded: <DateConverter date={file.created_at} />{\" \"}\n                        </div>\n                        <div className=\"p-1 bg-slate-200 rounded-b-md\">\n                          <center>\n                            <img\n                              src={`https://ouraqybsyczzrrlbvenz.supabase.co/storage/v1/object/public/StudentUploadedImages/${studemail}/${file.name}`}\n                              className=\" w-[50%] h-[300px] \"\n                            />\n                          </center>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport ViewStudData from \"./ViewStudData\";\nimport Avatar from \"@mui/material/Avatar\";\nimport supabase from \"../iMonitorDBconfig\";\n\nfunction StudentData({ studinfo, setHide }) {\n  useEffect(() => {\n    displayAvatar(studinfo.studemail);\n  }, [studinfo]);\n\n  var displayColor = \"\";\n  var number;\n\n  const [open, setOpen] = useState(false);\n\n  function stringToColor(string) {\n    let hash = 0;\n    let i;\n\n    /* eslint-disable no-bitwise */\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let color = \"#\";\n    number = hash;\n\n    for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.slice(-2);\n    }\n    displayColor = color;\n    /* eslint-enable no-bitwise */\n    return color;\n  }\n\n  function avatarComponent(name) {\n    return (\n      <div\n        style={{ background: stringToColor(name) }}\n        className={`flex text-white items-center justify-center h-9  w-9 rounded-full font-thin`}\n      >{`${name.toUpperCase().split(\" \")[0][0]}${name.toUpperCase().split(\" \")[1][0]} `}</div>\n    );\n  }\n\n  const [avatar, setAvatar] = useState(false);\n  const [displayAvatarConfig, setDisplayAvatar] = useState();\n\n  async function displayAvatar(email) {\n    try {\n      const { data: profilePic } = await supabase.storage\n        .from(\"ProfilePic\")\n        .list(email + \"/\", { limit: 1, offset: 0 });\n\n      if (profilePic) {\n        setAvatar(true);\n\n        setDisplayAvatar(\n          `https://ouraqybsyczzrrlbvenz.supabase.co/storage/v1/object/public/ProfilePic/${email}/${profilePic[0].name}`\n        );\n      }\n    } catch (error) {\n      setAvatar(false);\n    }\n  }\n\n  function openmodal() {\n    setOpen(!open);\n  }\n\n  return (\n    <>\n      <div\n        onClick={() => openmodal()}\n        className=\"grid grid-cols-2 cursor-pointer hover:bg-[#5885AF] hover:bg-opacity-[80%]  hover:text-blue-100 p-1 rounded-md \"\n      >\n        <div className=\"flex gap-1 items-center capitalize \">\n          {avatar ? (\n            <img\n              src={displayAvatarConfig}\n              className=\"h-9 w-9 rounded-full\"\n            ></img>\n          ) : (\n            <>{avatarComponent(studinfo.studname)}</>\n          )}\n          {studinfo.studname}\n        </div>\n        <div>{studinfo.studsection}</div>\n      </div>\n\n      <ViewStudData\n        onClose={setOpen}\n        visible={open}\n        studinfos={studinfo}\n        studname={studinfo.studname}\n        studemail={studinfo.studemail}\n        displayColor={displayColor}\n      />\n    </>\n  );\n}\n\nexport default StudentData;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport supabase from \"../iMonitorDBconfig\";\nimport StudentData from \"./StudentData\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { BsFillPersonPlusFill } from \"react-icons/bs\";\nimport { FaList } from \"react-icons/fa\";\nimport Tooltip from \"@mui/material/Tooltip\";\nexport default function ViewProfileModal({\n  visible,\n  onClose,\n  companyinfos,\n  number,\n  Data,\n  compName,\n  ReactTooltip,\n}) {\n  let menuRef = useRef();\n  const [studinfo, setStudInfo] = useState();\n  const [openstudinfo, setOpenStudInfo] = useState(false);\n\n  useEffect(() => {\n    handleGetStudentInformation();\n  }, [companyinfos]);\n\n  async function handleGetStudentInformation() {\n    const { data: studinfo } = await supabase\n      .from(\"StudentInformation\")\n      .select()\n      .eq(\"companyname\", compName);\n    setStudInfo(studinfo);\n  }\n  const [hideData, setHide] = useState(false);\n\n  if (!visible) return null;\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex justify-center items-center z-50\">\n      <div\n        ref={menuRef}\n        className=\"bg-slate-200 h-[75%] mt-10 md:w-[70%]  w-[100%] rounded-xl shadow-black shadow-2xl  \"\n        data-aos=\"zoom-in\"\n        data-aos-duration=\"200\"\n      >\n        <div className=\"flex  justify-end\">\n          <button\n            onClick={onClose}\n            className=\"  w-[10%] h-[30px] rounded-tr-md flex justify-center place-content-center items-center  hover:bg-red-400 bg-red-600\"\n          >\n            <AiOutlineClose className=\"font-bold text-[20px]\" />\n          </button>\n        </div>\n        <div className=\" rounded-xl m-[1%] p-2\">\n          <div className=\"pt-1 md:text-[25px] flex items-center gap-1 text-base font-semibold text-black w-[600px] rounded-md \">\n            <BsFillPersonPlusFill className=\"text-[30px]\" /> NUMBER OF STUDENT\n            CURRENTLY IN OJT: {number}\n          </div>\n          <form\n            className={`${\n              openstudinfo\n                ? \"hidden\"\n                : \"gap-x-10  grid md:grid-cols-2 grid-cols-1 overflow-y-auto h-[270px] pt-5 slate-200 rounded-xl pl-2 text-black\"\n            } font-thin`}\n          >\n            <label className=\" mt-2 md:text-lg text-base\">\n              COMPANY NAME: {companyinfos.companyname}\n            </label>\n            <label className=\" mt-2 md:text-lg text-base\">\n              COMPANY ADDRESS: {companyinfos.companyaddress}\n            </label>\n            <label className=\" mt-2 md:text-lg text-base\">\n              SUPERVISOR NAME: {companyinfos.supervisorname}\n            </label>\n            <label className=\" mt-2 md:text-lg text-base\">\n              SUPERVISOR CONTACT #: {companyinfos.supervisorcontactnumber}\n            </label>\n            <label className=\" mt-2 md:text-lg text-base\">\n              SUPERVISOR OFFICER #: {companyinfos.supervisorofficenumber}\n            </label>\n            <label className=\" mt-2 md:text-lg text-base\">\n              COMPANY DESIGNATION: {companyinfos.companydesignation}\n            </label>\n            <label className=\" mt-2 md:text-lg text-base  mb-[20px]\">\n              COMPANY EMAIL: {companyinfos.companyemail}\n            </label>\n          </form>\n\n          <a\n            onClick={() => setOpenStudInfo(!openstudinfo)}\n            className=\"font-semibold text-black flex items-center gap-1 hover:text-blue-500 rounded-md w-full mb-2 text-[20px] cursor-pointer\"\n          >\n            <FaList /> STUDENT INFORMATION (Current Enrolled)\n          </a>\n\n          {/* Student name display in div */}\n          {!hideData && (\n            <div\n              className={`${\n                openstudinfo\n                  ? \"h-[400px] transition-all duration-300 \"\n                  : \"h-[150px] \"\n              } overflow-auto bg-[#5f7caa] text-black p-1 rounded-md`}\n            >\n              <div className=\"pl-2\">\n                <div className=\"grid grid-cols-2 \">\n                  <div className=\"font-semibold text-[19px] \">Student Name</div>\n                  <div className=\"font-semibold text-[19px] \">\n                    Student Section\n                  </div>\n                </div>\n\n                {studinfo.map((studinfo) => (\n                  <StudentData\n                    key={studinfo.id}\n                    studinfo={studinfo}\n                    Data={Data}\n                    setHide={setHide}\n                    ReactTooltip={ReactTooltip}\n                  />\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport ViewCompanyModal from \"./ViewCompanyModal\";\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nconst CompanyConfig = ({ companyinfos, Data }) => {\n  // AOS ANIMATION\n  useEffect(() => {\n    AOS.init({ duration: 1000 });\n  }, []);\n\n  const [showmodalcompany, setShowModalCompany] = useState(false);\n  const handleclosemodalcompany = () => setShowModalCompany(false);\n\n  return (\n    <div className=\"company.info-data \">\n      <div className=\" grid gap-4 mt-[0.5%] hover:translate-x-4 duration-500 hover:shadow-lg cursor-pointer \">\n        <div\n          onClick={() => setShowModalCompany(true)}\n          className=\"bg-slate-200 p-3 text-black flex font-medium rounded \"\n        >\n          <div className=\"w-[30%]\">\n            <a data-tooltip-id=\"View\" className=\"pl-[2%]  w-fit \">\n              {companyinfos.companyname}\n            </a>\n          </div>\n\n          <div className=\"pl-[2%]  w-[39%]  md:text-base text-sm\">\n            {companyinfos.companyaddress}\n          </div>\n          <div className=\"pl-[2%]  w-[30%] md:pr-0 pr-2 md:text-base text-sm\">\n            NUMBER OF STUDENT ENTERED OJT: {companyinfos.companyOJT}\n          </div>\n        </div>\n      </div>\n      <ViewCompanyModal\n        onClose={handleclosemodalcompany}\n        visible={showmodalcompany}\n        companyinfos={companyinfos}\n        number={companyinfos.companyOJT}\n        compName={companyinfos.companyname}\n        Data={Data}\n      />\n      <ReactTooltip\n        id=\"View\"\n        place=\"right\"\n        variant=\"info\"\n        content=\"View Information\"\n      />\n    </div>\n  );\n};\n\nexport default CompanyConfig;\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { BarChart, Bar } from \"@mui/x-charts/BarChart\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport stilogo from \"../images/STILOGO4.png\";\r\nexport default function PdfLayout({ data, analytics, avg, testRef }) {\r\n  const layoutFile = useRef(null);\r\n  useEffect(() => {\r\n    layout();\r\n  }, [data]);\r\n\r\n  const layout = () => {\r\n    const calculateAverateCompleted = (\r\n      overallValue,\r\n      CompleteValue,\r\n      InCompleteValue\r\n    ) => {\r\n      let avgCOM = Math.round((CompleteValue / overallValue) * 100);\r\n      let avgINCOM = Math.round((InCompleteValue / overallValue) * 100);\r\n\r\n      return (\r\n        <div className=\"flex text-center gap-2 justify-center\">\r\n          <div className=\"flex  gap-1 text-[15px] \">\r\n            <p>\r\n              The average number of student who completed their on-the-job\r\n              training in this company is{\" \"}\r\n              <em className=\"text-green-500 font-bold  italic\">{`${\r\n                avgCOM >= -0 ? `${avgCOM}%` : \"No Data\"\r\n              }`}</em>\r\n            </p>\r\n          </div>\r\n          <div className=\"flex text-[15px] \">\r\n            <p>\r\n              The average number of student who didn't complete their on-the-job\r\n              training in this{\" \"}\r\n              <em className=\"text-red-700 font-bold italic\">{`${\r\n                avgINCOM >= -0 ? `${avgINCOM}%` : \"No Data\"\r\n              }`}</em>\r\n            </p>\r\n          </div>\r\n          .\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div ref={layoutFile} className=\"mt-2  h-screen\">\r\n        {analytics && (\r\n          <div className=\"\">\r\n            <div className=\" md:w-[100%]  w-[99%]  h-[33%] md:flex grid place-content-center items-center  inset-0  text-black rounded-md \">\r\n              {/* PIE CHART */}\r\n              <div className=\" h-[100%] flex items-center \">\r\n                <div className=\"flex-col mb-2\">\r\n                  <p className=\"flex-col flex text-center font-senibold text-lg text-black\">\r\n                    {analytics.length >= 2 && \"Top 3 Companies\"}\r\n                  </p>\r\n\r\n                  <PieChart\r\n                    data={analytics.map((file) => ({\r\n                      title: file.companyname,\r\n                      value: file.companyOJT,\r\n                      color: file.color,\r\n                    }))}\r\n                    className=\" md:w-[200px] w-[150px] \"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\" ml-10 gap-5  text-black justify-start flex items-center \">\r\n                  <>\r\n                    {analytics.map((data, index) => (\r\n                      <div\r\n                        key={data.id}\r\n                        className=\"font-thin text-sm  items-center  justify-center gap-1 cursor-default grid\"\r\n                      >\r\n                        <label className=\"flex items-center gap-1\">\r\n                          <div\r\n                            style={{ background: data.color }}\r\n                            className=\"h-[15px] w-[15px] rounded-full items-center  gap-1 \"\r\n                          />\r\n                          {data.companyname}\r\n                        </label>\r\n\r\n                        <label className=\"text-[14px] flex font-thin\">\r\n                          Number of Students Enrolled: {data.companyOJT}\r\n                        </label>\r\n\r\n                        <div className=\"flex gap-2\">\r\n                          <label className=\"text-[14px] flex font-thin\">\r\n                            {avg\r\n                              ? `Completed: ${avg[index].completed}`\r\n                              : \"Loading\"}\r\n                          </label>\r\n                          <label className=\"text-[14px] flex font-thin\">\r\n                            {avg\r\n                              ? `Incomplete: ${avg[index].incomplete}`\r\n                              : \"Loading\"}\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"p-10\">\r\n              {analytics && (\r\n                <div className=\"flex  justify-between \">\r\n                  {analytics.map((data, index) => (\r\n                    <div key={data.id}>\r\n                      <div className=\"  p-3 mt-2 rounded text-black md:w-[100%] w-[102%]\">\r\n                        <label className=\"text-xl font-thin flex items-center gap-1\">\r\n                          <span\r\n                            style={{ background: data.color }}\r\n                            className=\"h-[15px] w-[15px] rounded-full items-center\"\r\n                          />\r\n                          {data.companyname}\r\n                        </label>\r\n                        <BarChart\r\n                          xAxis={[\r\n                            {\r\n                              scaleType: \"band\",\r\n                              data: [\"Enrolled\", \"Completed\", \"Incomplete\"],\r\n                            },\r\n                          ]}\r\n                          series={[\r\n                            {\r\n                              data: [\r\n                                data.companyOJT,\r\n                                avg[index].completed,\r\n                                avg[index].incomplete,\r\n                              ],\r\n                              color: [data.color],\r\n                            },\r\n                          ]}\r\n                          width={270}\r\n                          height={270}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n              <div className=\" p-3 rounded  md:w-[100%]  w-[99%] text-black justify-center flex \">\r\n                <label className=\"font-thin text-lg text-center\">\r\n                  OVERALL COMPLETED AND INCOMPLETE IN EACH COURSE FOR THE TOP 3\r\n                  MOST OJT ENROLLED AT THAT COMPANY\r\n                </label>\r\n              </div>\r\n              {analytics && (\r\n                <div className=\" grid justify-between:w-[100%]\">\r\n                  {analytics.map((data, index) => (\r\n                    <div key={data.id}>\r\n                      <div className=\"  p-3 rounded w-[100%] text-black \">\r\n                        <label className=\"text-xl font-thin flex items-center gap-1\">\r\n                          <span\r\n                            style={{ background: data.color }}\r\n                            className=\"h-[15px] w-[15px] rounded-full items-center\"\r\n                          />\r\n                          {data.companyname}\r\n                        </label>\r\n\r\n                        <div className=\"grid grid-cols-3 w-[100%] \">\r\n                          {/* IT */}\r\n                          <div>\r\n                            BSIT\r\n                            <BarChart\r\n                              xAxis={[\r\n                                {\r\n                                  scaleType: \"band\",\r\n                                  data: [\"Complete\", \"Incomplete\"],\r\n                                },\r\n                              ]}\r\n                              series={[\r\n                                {\r\n                                  data: [\r\n                                    avg[index].BSITCom,\r\n                                    avg[index].BSITInCom,\r\n                                  ],\r\n                                  color: [data.color],\r\n                                },\r\n                              ]}\r\n                              width={250}\r\n                              height={230}\r\n                            />\r\n                          </div>\r\n                          {/* TM */}\r\n                          <div>\r\n                            BSTM\r\n                            <BarChart\r\n                              xAxis={[\r\n                                {\r\n                                  scaleType: \"band\",\r\n                                  data: [\"Complete\", \"Incomplete\"],\r\n                                },\r\n                              ]}\r\n                              series={[\r\n                                {\r\n                                  data: [\r\n                                    avg[index].BSTMCom,\r\n                                    avg[index].BSTMInCom,\r\n                                  ],\r\n                                  color: [data.color],\r\n                                },\r\n                              ]}\r\n                              width={250}\r\n                              height={230}\r\n                            />\r\n                          </div>\r\n                          {/* HM */}\r\n                          <div>\r\n                            BSHM\r\n                            <BarChart\r\n                              xAxis={[\r\n                                {\r\n                                  scaleType: \"band\",\r\n                                  data: [\"Complete\", \"Incomplete\"],\r\n                                },\r\n                              ]}\r\n                              series={[\r\n                                {\r\n                                  data: [\r\n                                    avg[index].BSHMCom,\r\n                                    avg[index].BSHMInCom,\r\n                                  ],\r\n                                  color: [data.color],\r\n                                },\r\n                              ]}\r\n                              width={250}\r\n                              height={230}\r\n                            />\r\n                          </div>\r\n                          {/* AIS */}\r\n                          <div>\r\n                            BSAIS\r\n                            <BarChart\r\n                              xAxis={[\r\n                                {\r\n                                  scaleType: \"band\",\r\n                                  data: [\"Complete\", \"Incomplete\"],\r\n                                },\r\n                              ]}\r\n                              series={[\r\n                                {\r\n                                  data: [\r\n                                    avg[index].BSAISCom,\r\n                                    avg[index].BSAISInCom,\r\n                                  ],\r\n                                  color: [data.color],\r\n                                },\r\n                              ]}\r\n                              width={250}\r\n                              height={230}\r\n                            />\r\n                          </div>\r\n                          {/* CPE */}\r\n                          <div>\r\n                            BSCPE\r\n                            <BarChart\r\n                              xAxis={[\r\n                                {\r\n                                  scaleType: \"band\",\r\n                                  data: [\"Complete\", \"Incomplete\"],\r\n                                },\r\n                              ]}\r\n                              series={[\r\n                                {\r\n                                  data: [\r\n                                    avg[index].BSCPECom,\r\n                                    avg[index].BSCPEInCom,\r\n                                  ],\r\n                                  color: [data.color],\r\n                                },\r\n                              ]}\r\n                              width={250}\r\n                              height={230}\r\n                            />\r\n                          </div>\r\n                          {/* CS */}\r\n                          <div>\r\n                            BSCS\r\n                            <BarChart\r\n                              xAxis={[\r\n                                {\r\n                                  scaleType: \"band\",\r\n                                  data: [\"Complete\", \"Incomplete\"],\r\n                                },\r\n                              ]}\r\n                              series={[\r\n                                {\r\n                                  data: [\r\n                                    avg[index].BSCSCom,\r\n                                    avg[index].BSCSInCom,\r\n                                  ],\r\n                                  color: [data.color],\r\n                                },\r\n                              ]}\r\n                              width={250}\r\n                              height={230}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"items-center flex font-light w-[100%]\">\r\n                          {calculateAverateCompleted(\r\n                            data.companyOJT,\r\n                            avg[index].completed,\r\n                            avg[index].incomplete\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"h-[1px] bg-black w-[99%] mb-4\" />\r\n        <label className=\"flex justify-center text-[12px]\">\r\n          © 2023 STI College. All Rights Reserved.\r\n        </label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const capital = (text) => {\r\n\r\n    var textCapital = text;\r\n    return (\r\n      <p className=\"font-thin\">\r\n        {textCapital.toUpperCase()} <em className=\"font-semibold\">iMonitor</em>\r\n      </p>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <div ref={testRef} className=\"p-2\">\r\n      <div className=\"flex items-center  gap-2 ml-1\">\r\n        <img src={stilogo} alt=\"STI LOGO\" className=\" h-15 w-20 rounded-sm\" />\r\n        <label className=\"font-bold text-[30px] font-sans text-[#0874B9]\">\r\n          iMonitor\r\n        </label>\r\n      </div>\r\n      <div className=\"h-[1px] bg-black w-[99%] mt-4\" />\r\n\r\n      <div className=\"p-3\">\r\n        <label className=\"flex justify-center text-[20px] text-center \">\r\n          {capital(`THIS DATA CONSISTS OF THE DETAILED INFORMATION OF THE TOP 3 COMPANY GENERATED IN`)}\r\n        </label>\r\n      </div>\r\n      <div className=\"grid\">{layout()}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { LineChart } from \"@mui/x-charts/LineChart\";\r\nimport { BarChart, Bar } from \"@mui/x-charts/BarChart\";\r\n\r\nimport supabase from \"../iMonitorDBconfig\";\r\nimport { MdLocalPrintshop } from \"react-icons/md\";\r\nimport { MoonLoader } from \"react-spinners\";\r\nimport PdfLayout from \"./PdfLayout\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport ReactToPrint from \"react-to-print\";\r\nfunction Analytics({ data }) {\r\n  const [analytics, setAnalytics] = useState([]);\r\n  const [showdata, setShowData] = useState(false);\r\n  const [avg, setAvg] = useState([]);\r\n  const [moreinformaiton, setMoreInformation] = useState(false);\r\n\r\n  const divRef = useRef(null);\r\n  const testRef = useRef();\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (divRef.current && !divRef.current.contains(event.target)) {\r\n      setMoreInformation(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    Analytics(data);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    AOS.init({ duration: 1000 });\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  var array;\r\n\r\n  async function Analytics(data) {\r\n    try {\r\n      var array = await data.sort((a, b) =>\r\n        a.companyOJT < b.companyOJT ? 1 : -1\r\n      );\r\n      const colors = [\"#efcc00\", \"#6693F5\", \"#0080FE\"];\r\n      var holder = [];\r\n\r\n      for (let index = 0; index < 3; index++) {\r\n        holder = holder.concat([\r\n          {\r\n            color: colors[index],\r\n            id: array[index].id,\r\n            companyname: array[index].companyname,\r\n            companyOJT: array[index].companyOJT,\r\n          },\r\n        ]);\r\n      }\r\n\r\n      setAnalytics(holder);\r\n      var store = [];\r\n      for (let index = 0; index < holder.length; index++) {\r\n        store = store.concat(await DataTop1(holder[index].companyname));\r\n      }\r\n      setAvg(store);\r\n      setShowData(true);\r\n    } catch (error) {}\r\n  }\r\n\r\n  const DataTop1 = async (compname) => {\r\n    const { data: masterlistcom, count: complete } = await supabase\r\n      .from(\"MasterListTable1\")\r\n      .select(\"*\", { count: \"exact\" })\r\n      .match({\r\n        companyname: compname,\r\n        status: \"complete\",\r\n      });\r\n\r\n    const { data: masterlistincom, count: incomplete } = await supabase\r\n      .from(\"MasterListTable1\")\r\n      .select(\"*\", { count: \"exact\" })\r\n      .match({\r\n        companyname: compname,\r\n        status: \"incomplete\",\r\n      });\r\n\r\n    var incom = masterlistincom;\r\n    var com = masterlistcom;\r\n\r\n    let ITcom = 0;\r\n    let ITincom = 0;\r\n\r\n    let TMcom = 0;\r\n    let TMincom = 0;\r\n\r\n    let AIScom = 0;\r\n    let AISincom = 0;\r\n\r\n    let HMcom = 0;\r\n    let HMincom = 0;\r\n\r\n    let CPEcom = 0;\r\n    let CPEincom = 0;\r\n\r\n    let CScom = 0;\r\n    let CSincom = 0;\r\n    if (masterlistcom)\r\n      for (let index = 0; index < com.length; index++) {\r\n        if (com[index].filterby === \"BSIT\") ITcom++;\r\n        if (com[index].filterby === \"BSHM\") HMcom++;\r\n        if (com[index].filterby === \"BSTM\") TMcom++;\r\n        if (com[index].filterby === \"BSCPE\") CPEcom++;\r\n        if (com[index].filterby === \"BSAIS\") AIScom++;\r\n        if (com[index].filterby === \"BSCS\") CScom++;\r\n      }\r\n    for (let index = 0; index < incom.length; index++) {\r\n      if (incom[index].filterby === \"BSIT\") ITcom++;\r\n      if (incom[index].filterby === \"BSHM\") HMcom++;\r\n      if (incom[index].filterby === \"BSTM\") TMcom++;\r\n      if (incom[index].filterby === \"BSCPE\") CPEcom++;\r\n      if (incom[index].filterby === \"BSAIS\") AIScom++;\r\n      if (incom[index].filterby === \"BSCS\") CScom++;\r\n    }\r\n\r\n    array = [\r\n      {\r\n        companyname: compname,\r\n        completed: complete,\r\n        incomplete: incomplete,\r\n        BSITCom: ITcom,\r\n        BSITInCom: ITincom,\r\n\r\n        BSTMCom: TMcom,\r\n        BSTMInCom: TMincom,\r\n\r\n        BSAISCom: AIScom,\r\n        BSAISInCom: AISincom,\r\n\r\n        BSHMCom: HMcom,\r\n        BSHMInCom: HMincom,\r\n\r\n        BSCPECom: CPEcom,\r\n        BSCPEInCom: CPEincom,\r\n\r\n        BSCSCom: CScom,\r\n        BSCSInCom: CSincom,\r\n      },\r\n    ];\r\n    return array;\r\n  };\r\n\r\n  const calculateAverateCompleted = (\r\n    overallValue,\r\n    CompleteValue,\r\n    InCompleteValue\r\n  ) => {\r\n    let avgCOM = Math.round((CompleteValue / overallValue) * 100);\r\n    let avgINCOM = Math.round((InCompleteValue / overallValue) * 100);\r\n    return (\r\n      <div className=\"flex text-start gap-2 justify-center w-[100%]\">\r\n        <div className=\"md:flex grid gap-1 text-[15px] \">\r\n          The average number of student who completed their on-the-job training\r\n          in this company is\r\n          <div className=\"text-green-500 font-bold  italic\">{`${\r\n            avgCOM >= -0 ? `${avgCOM}%` : \"No Data\"\r\n          }`}</div>\r\n        </div>\r\n        <div className=\"md:flex grid gap-1 text-[15px] \">\r\n          The average number of student who didn't complete their on-the-job\r\n          training in this\r\n          <div className=\"text-red-700 font-bold italic\">{`${\r\n            avgINCOM >= -0 ? `${avgINCOM}%` : \"No Data\"\r\n          }`}</div>\r\n        </div>\r\n        .\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div ref={divRef}>\r\n      {analytics ? (\r\n        <div>\r\n          {analytics.length < 2 ? (\r\n            <label className=\"text-white font-bold text-[20px]  flex justify-center place-content-center items-center mt-[10%]\">\r\n              The analytics will show when there are three or more companies\r\n              registered.\r\n            </label>\r\n          ) : (\r\n            <div className=\"mt-2  h-screen \">\r\n              {showdata ? (\r\n                <>\r\n                  <div className=\"flex justify-end\">\r\n                    <ReactToPrint\r\n                      trigger={() => (\r\n                        <button className=\"flex gap-1 items-center p-0.5 px-2 rounded-md mt-1 text-white -mb-6\">\r\n                          <MdLocalPrintshop className=\"text-[20px] cursor-pointer\" />\r\n                        </button>\r\n                      )}\r\n                      content={() => testRef.current}\r\n                      documentTitle=\"Test\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"hidden\">\r\n                    <PdfLayout\r\n                      data={data}\r\n                      analytics={analytics}\r\n                      avg={avg}\r\n                      testRef={testRef}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\" md:w-[100%]  w-[99%]   h-auto md:flex grid place-content-center items-center  inset-0 bg-[#6f97bcb3] text-black rounded-md shadow-md shadow-black\">\r\n                    <div className=\" flex items-center \">\r\n                      <div className=\"flex-col mb-2\">\r\n                        <p className=\"flex-col flex text-center font-bold text-lg text-white\">\r\n                          {analytics.length >= 2 && \"Top 3 Companies\"}\r\n                        </p>\r\n\r\n                        <PieChart\r\n                          data={analytics.map((file) => ({\r\n                            title: file.companyname,\r\n                            value: file.companyOJT,\r\n                            color: file.color,\r\n                          }))}\r\n                          className=\" md:w-[200px] w-[150px] \"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\" ml-10 md:gap-10 gap-5 text-white justify-start md:flex grid items-center \">\r\n                        {analytics.map((data, index) => (\r\n                          <div\r\n                            key={data.id}\r\n                            className=\"font-semibold text-sm  items-center  justify-center gap-1 cursor-default grid\"\r\n                          >\r\n                            <label className=\"flex items-center gap-1\">\r\n                              <div\r\n                                style={{ background: data.color }}\r\n                                className=\"h-[15px] w-[15px] rounded-full items-center  gap-1 \"\r\n                              />\r\n                              {data.companyname}\r\n                            </label>\r\n\r\n                            <label className=\"text-[14px] flex font-thin\">\r\n                              Number of Students Enrolled: {data.companyOJT}\r\n                            </label>\r\n\r\n                            <div className=\"flex gap-2\">\r\n                              <label className=\"text-[14px] flex font-thin\">\r\n                                {avg\r\n                                  ? `Completed: ${avg[index].completed}`\r\n                                  : \"Loading\"}\r\n                              </label>\r\n                              <label className=\"text-[14px] flex font-thin\">\r\n                                {avg\r\n                                  ? `Incomplete: ${avg[index].incomplete}`\r\n                                  : \"Loading\"}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {moreinformaiton ? (\r\n                    <div>\r\n                      <div\r\n                        onClick={() => setMoreInformation(!moreinformaiton)}\r\n                        className=\"cursor-pointer bg-[#58abf8b3] hover:bg-[#48a7ff60]  p-1 mt-4 rounded shadow-black shadow-lg md:w-[100%]  w-[99%] text-white justify-center flex \"\r\n                      >\r\n                        <label className=\"font-bold text-md  cursor-pointer\">\r\n                          HIDE INFORMATION\r\n                        </label>\r\n                      </div>\r\n                      {showdata ? (\r\n                        <div className=\"md:flex grid justify-between \">\r\n                          {analytics.map((data, index) => (\r\n                            <div key={data.id}>\r\n                              <div className=\" bg-[#6f97bcb3] p-3 mt-4 rounded shadow-black shadow-lg text-white md:w-[100%] w-[102%]\">\r\n                                <label className=\"text-xl font-bold flex items-center gap-1\">\r\n                                  <span\r\n                                    style={{ background: data.color }}\r\n                                    className=\"h-[15px] w-[15px] rounded-full items-center\"\r\n                                  />\r\n                                  {data.companyname}\r\n                                </label>\r\n                                <BarChart\r\n                                  xAxis={[\r\n                                    {\r\n                                      scaleType: \"band\",\r\n                                      data: [\r\n                                        \"Enrolled\",\r\n                                        \"Completed\",\r\n                                        \"Incomplete\",\r\n                                      ],\r\n                                    },\r\n                                  ]}\r\n                                  series={[\r\n                                    {\r\n                                      data: [\r\n                                        data.companyOJT,\r\n                                        avg[index].completed,\r\n                                        avg[index].incomplete,\r\n                                      ],\r\n                                      color: [data.color],\r\n                                    },\r\n                                  ]}\r\n                                  width={`${\r\n                                    window.innerWidth <= 768 ? 440 : 370\r\n                                  }`}\r\n                                  height={340}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"flex place-content-center items-center h-[300px] bg-[#6f97bcb3] mt-2 rounded-md shadow-black shadow-md\">\r\n                          <MoonLoader color=\"#131f2a\" speedMultiplier={0.5} />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"bg-[#6f97bcb3] p-3 mt-4 rounded shadow-black shadow-lg  md:w-[100%]  w-[99%] text-white justify-center flex \">\r\n                        <label className=\"font-thin text-lg\">\r\n                          OVERALL COMPLETED AND INCOMPLETE IN EACH COURSE FOR\r\n                          THE TOP 3 MOST OJT ENROLLED AT THAT COMPANY\r\n                        </label>\r\n                      </div>\r\n                      {showdata ? (\r\n                        <div className=\" grid justify-between md:w-[100%]  w-[95%]\">\r\n                          {analytics.map((data, index) => (\r\n                            <div key={data.id}>\r\n                              <div className=\" bg-[#6f97bcb3] p-3 mt-4 rounded shadow-black shadow-lg md:w-[100%] w-[105%] text-white \">\r\n                                <label className=\"text-xl font-bold flex items-center gap-1\">\r\n                                  <span\r\n                                    style={{ background: data.color }}\r\n                                    className=\"h-[15px] w-[15px] rounded-full items-center\"\r\n                                  />\r\n                                  {data.companyname}\r\n                                </label>\r\n\r\n                                <div className=\"grid md:grid-cols-6 grid-cols-2 md:w-[100%] \">\r\n                                  {/* IT */}\r\n                                  <div>\r\n                                    BSIT\r\n                                    <BarChart\r\n                                      xAxis={[\r\n                                        {\r\n                                          scaleType: \"band\",\r\n                                          data: [\"Complete\", \"Incomplete\"],\r\n                                        },\r\n                                      ]}\r\n                                      series={[\r\n                                        {\r\n                                          data: [\r\n                                            avg[index].BSITCom,\r\n                                            avg[index].BSITInCom,\r\n                                          ],\r\n                                          color: [data.color],\r\n                                        },\r\n                                      ]}\r\n                                      width={240}\r\n                                      height={260}\r\n                                    />\r\n                                  </div>\r\n                                  {/* TM */}\r\n                                  <div>\r\n                                    BSTM\r\n                                    <BarChart\r\n                                      xAxis={[\r\n                                        {\r\n                                          scaleType: \"band\",\r\n                                          data: [\"Complete\", \"Incomplete\"],\r\n                                        },\r\n                                      ]}\r\n                                      series={[\r\n                                        {\r\n                                          data: [\r\n                                            avg[index].BSTMCom,\r\n                                            avg[index].BSTMInCom,\r\n                                          ],\r\n                                          color: [data.color],\r\n                                        },\r\n                                      ]}\r\n                                      width={240}\r\n                                      height={260}\r\n                                    />\r\n                                  </div>\r\n                                  {/* HM */}\r\n                                  <div>\r\n                                    BSHM\r\n                                    <BarChart\r\n                                      xAxis={[\r\n                                        {\r\n                                          scaleType: \"band\",\r\n                                          data: [\"Complete\", \"Incomplete\"],\r\n                                        },\r\n                                      ]}\r\n                                      series={[\r\n                                        {\r\n                                          data: [\r\n                                            avg[index].BSHMCom,\r\n                                            avg[index].BSHMInCom,\r\n                                          ],\r\n                                          color: [data.color],\r\n                                        },\r\n                                      ]}\r\n                                      width={240}\r\n                                      height={260}\r\n                                    />\r\n                                  </div>\r\n                                  {/* AIS */}\r\n                                  <div>\r\n                                    BSAIS\r\n                                    <BarChart\r\n                                      xAxis={[\r\n                                        {\r\n                                          scaleType: \"band\",\r\n                                          data: [\"Complete\", \"Incomplete\"],\r\n                                        },\r\n                                      ]}\r\n                                      series={[\r\n                                        {\r\n                                          data: [\r\n                                            avg[index].BSAISCom,\r\n                                            avg[index].BSAISInCom,\r\n                                          ],\r\n                                          color: [data.color],\r\n                                        },\r\n                                      ]}\r\n                                      width={240}\r\n                                      height={260}\r\n                                    />\r\n                                  </div>\r\n                                  {/* CPE */}\r\n                                  <div>\r\n                                    BSCPE\r\n                                    <BarChart\r\n                                      xAxis={[\r\n                                        {\r\n                                          scaleType: \"band\",\r\n                                          data: [\"Complete\", \"Incomplete\"],\r\n                                        },\r\n                                      ]}\r\n                                      series={[\r\n                                        {\r\n                                          data: [\r\n                                            avg[index].BSCPECom,\r\n                                            avg[index].BSCPEInCom,\r\n                                          ],\r\n                                          color: [data.color],\r\n                                        },\r\n                                      ]}\r\n                                      width={240}\r\n                                      height={260}\r\n                                    />\r\n                                  </div>\r\n                                  {/* CS */}\r\n                                  <div>\r\n                                    BSCS\r\n                                    <BarChart\r\n                                      xAxis={[\r\n                                        {\r\n                                          scaleType: \"band\",\r\n                                          data: [\"Complete\", \"Incomplete\"],\r\n                                        },\r\n                                      ]}\r\n                                      series={[\r\n                                        {\r\n                                          data: [\r\n                                            avg[index].BSCSCom,\r\n                                            avg[index].BSCSInCom,\r\n                                          ],\r\n                                          color: [data.color],\r\n                                        },\r\n                                      ]}\r\n                                      width={240}\r\n                                      height={260}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"items-center flex font-light w-[100%]\">\r\n                                  {calculateAverateCompleted(\r\n                                    data.companyOJT,\r\n                                    avg[index].completed,\r\n                                    avg[index].incomplete\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"flex place-content-center items-center h-[300px] bg-[#5885AF] bg-opacity-20 mt-2 rounded-md shadow-black shadow-md\">\r\n                          <MoonLoader color=\"#131f2a\" speedMultiplier={0.5} />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"h-[100px]\" />\r\n                    </div>\r\n                  ) : (\r\n                    <div\r\n                      onClick={() => setMoreInformation(!moreinformaiton)}\r\n                      className=\"bg-[#4778a6b3] cursor-pointer hover:bg-[#48a7ff60] p-1 mt-4 rounded shadow-black shadow-lg  md:w-[100%]  w-[99%] text-white justify-center flex \"\r\n                    >\r\n                      <label className=\"font-bold text-md cursor-pointer\">\r\n                        VIEW MORE INFORMATION\r\n                      </label>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <div className=\"flex place-content-center items-center h-[300px] bg-[#5885AF] bg-opacity-20 mt-2 rounded-md shadow-black shadow-md\">\r\n                  <MoonLoader color=\"#131f2a\" speedMultiplier={0.5} />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"flex place-content-center items-center h-[300px] bg-[#5885AF] bg-opacity-20 mt-2 rounded-md shadow-black shadow-md\">\r\n          <MoonLoader color=\"#131f2a\" speedMultiplier={0.5} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Analytics;\r\n","import React, { useState, useEffect } from \"react\";\nimport supabase from \"../iMonitorDBconfig\";\nimport CompanyConfig from \"./CompanyConfig\";\nimport { Backdrop } from \"@mui/material\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport { BsFileEarmarkPostFill, BsFillFileBarGraphFill } from \"react-icons/bs\";\n\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nimport ReactPaginate from \"react-paginate\";\nimport Analytics from \"./Analytics\";\n\nconst Company = ({ Data }) => {\n  const [fetcherrror, setFetchError] = useState(null);\n  const [companyinfos, setStudCompanyInfos] = useState(null);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [count, setCount] = useState(0);\n\n  const [openTable, setOpenTable] = useState(true);\n\n  useEffect(() => {\n    fetchcompanyinfo();\n\n    supabase\n      .channel(\"custom-all-channel\")\n      .on(\n        \"postgres_changes\",\n        { event: \"*\", schema: \"public\", table: \"CompanyTable\" },\n        (payload) => {\n          fetchcompanyinfo();\n        }\n      )\n      .subscribe();\n    AOS.init({ duration: 1000 });\n  }, []);\n\n  const fetchcompanyinfo = async () => {\n    const { data, count, error } = await supabase\n      .from(\"CompanyTable\")\n      .select(\"*\", { count: \"exact\" });\n\n    if (error) {\n      setFetchError(\"Could not fetch the data please check your internet\");\n      setStudCompanyInfos(null);\n    }\n\n    setCount(count);\n    setStudCompanyInfos(data);\n\n    setFetchError(null);\n  };\n\n  const [pageNumber, setPageNumber] = useState(0);\n  const userPerPage = 20;\n  const pageVisited = pageNumber * userPerPage;\n\n  const pageCount = Math.ceil(count / userPerPage);\n\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n\n  return (\n    <div className=\"overflow-y-auto overflow-x-hidden h-screen w-[100%] \">\n      {companyinfos === null ? (\n        <Backdrop\n          sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n          open\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      ) : (\n        \"\"\n      )}\n      <div className=\"h-[100%] md:p-10 p-2\">\n        <div\n          data-aos=\"fade-up\"\n          data-aos-duration=\"300\"\n          className=\"md:pt-[0%] pt-[10%]\"\n        >\n          <label className=\"text-[30px] font-bold text-white\">\n            COMPANY INFORMATION\n          </label>\n          {/* Search */}\n          <div className=\"mt-1 w-full flex\">\n            <button\n              onClick={() => setOpenTable(true)}\n              className={`${\n                openTable\n                  ? \"bg-[#80c2ff] text-black p-1 rounded-md flex items-center gap-1 mr-2 shadow-md shadow-black duration-300 \"\n                  : \"bg-[#5885AF] text-white p-1 rounded-md flex items-center gap-1 mr-2 hover:shadow-md hover:shadow-black hover:bg-[#80c2ff] hover:text-black\"\n              } `}\n            >\n              <BsFileEarmarkPostFill /> Table\n            </button>\n            <button\n              onClick={() => setOpenTable(false)}\n              className={`${\n                !openTable\n                  ? \"bg-[#80c2ff] text-black p-1 rounded-md flex items-center gap-1 shadow-md shadow-black duration-300\"\n                  : \"bg-[#5885AF] text-white p-1 rounded-md flex items-center gap-1 hover:shadow-md hover:shadow-black hover:bg-[#80c2ff] hover:text-blacK\"\n              } `}\n            >\n              <BsFillFileBarGraphFill /> Analytics\n            </button>\n          </div>\n          {openTable ? (\n            <div>\n              <div\n                className=\"bg-slate-100 w-[100%] mt-5 rounded-full justify-center flex\n               text-black\"\n              >\n                <div id=\"searchbar\" className=\"flex w-[100%] \">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                    className=\"h-[18px] w-10 mt-2.5 ml-2\"\n                  >\n                    <path d=\"M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z\" />\n                  </svg>\n                  <input\n                    type=\"search\"\n                    placeholder=\"Search\"\n                    value={searchTerm}\n                    className=\"cursor-text w-[100%]  h-[40px] rounded-full border pl-12  focus:pl-16 focus:pr-4\"\n                    onChange={(e) => {\n                      setSearchTerm(e.target.value);\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"bg-slate-300 rounded mt-2 w-[100%] h-[50px] justify-start grid grid-cols-3 items-center md:text-[15px] text-[10px] font-extrabold text-[#41729F] \">\n                <div className=\"md:ml-5 ml-3\">COMPANY</div>\n                <div className=\"md:-ml-4 -ml-2\">COMPANY ADDRESS</div>\n                <div className=\"md:ml-10 ml-1\">NUMBER OF STUDENTS</div>\n              </div>\n\n              <div\n                data-aos=\"fade-up\"\n                data-aos-duration=\"500\"\n                className=\" mt-1  h-[300px] overflow-y-auto overflow-x-hidden\"\n              >\n                {companyinfos && companyinfos.length > 0 ? (\n                  <>\n                    {searchTerm ? (\n                      <>\n                        <div className=\" \">\n                          {companyinfos\n                            .filter((val) => {\n                              try {\n                                if (searchTerm === \"\") {\n                                  return val;\n                                } else if (\n                                  val.companyname\n                                    .toLowerCase()\n                                    .includes(searchTerm.toLowerCase())\n                                ) {\n                                  return val;\n                                } else if (\n                                  val.companyaddress\n                                    .toLowerCase()\n                                    .includes(searchTerm.toLowerCase())\n                                ) {\n                                  return val;\n                                }\n                              } catch (error) {}\n                            })\n                            .sort((a, b) =>\n                              a.companyOJT < b.companyOJT ? 1 : -1\n                            )\n                            .map((companyinfos) => (\n                              <CompanyConfig\n                                key={companyinfos.id}\n                                companyinfos={companyinfos}\n                              />\n                            ))}\n                        </div>\n                      </>\n                    ) : (\n                      <div className=\" \">\n                        {companyinfos\n                          .slice(pageVisited, pageVisited + userPerPage)\n                          .filter((val) => {\n                            try {\n                              if (searchTerm === \"\") {\n                                return val;\n                              } else if (\n                                val.companyname\n                                  .toLowerCase()\n                                  .includes(searchTerm.toLowerCase())\n                              ) {\n                                return val;\n                              } else if (\n                                val.companyaddress\n                                  .toLowerCase()\n                                  .includes(searchTerm.toLowerCase())\n                              ) {\n                                return val;\n                              }\n                            } catch (error) {}\n                          })\n                          .sort((a, b) =>\n                            a.companyOJT < b.companyOJT ? 1 : -1\n                          )\n                          .map((companyinfos) => (\n                            <CompanyConfig\n                              key={companyinfos.id}\n                              companyinfos={companyinfos}\n                              Data={Data}\n                            />\n                          ))}\n                      </div>\n                    )}\n                  </>\n                ) : (\n                  <div className=\"flex items-center justify-center place-content-center md:h-[90%] h-[80%]  \">\n                    <label className=\"font-bold text-[30px] text-white\">\n                      No Data\n                    </label>\n                  </div>\n                )}\n              </div>\n              <div className=\"md:mt-[20px] mt-[10px] text-white\">\n                {companyinfos && companyinfos.length > 0 && (\n                  <ReactPaginate\n                    previousLabel={\"Previous\"}\n                    nextLabel={\"Next\"}\n                    pageCount={pageCount}\n                    onPageChange={changePage}\n                    containerClassName=\"flex gap-2 justify-center flex items-center\"\n                    previousLinkClassName=\"bg-[#5885AF] p-1 rounded-md flex items-center\"\n                    nextLinkClassName=\"bg-[#5885AF] p-1 rounded-md flex items-center\"\n                    disabledLinkClassName=\"bg-[#5885AF] p-1 rounded-md\"\n                    activeLinkClassName=\"bg-[#5885AF] p-1 rounded-md\"\n                  />\n                )}\n                <div className=\"md:mb-[0%] mb-[30%]\" />\n              </div>\n            </div>\n          ) : (\n            <Analytics data={companyinfos} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Company;\n","import moment from \"moment\";\nimport React from \"react\";\n\nfunction DateConverter({ date }) {\n  var time = moment(date).format('LLL'); ;\n  return <div className=\"ml-1\">{time}</div>;\n}\n\nexport default DateConverter;\n"],"names":["ViewStudData","_ref","visible","onClose","studinfos","studemail","displayColor","_useState","useState","_useState2","_slicedToArray","files","setFiles","useEffect","_x2","_displayAvatar","apply","arguments","displayAvatar","fetchFilesInFolder","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","folderName","_yield$supabase$stora","data","error","wrap","_context","prev","next","supabase","storage","from","list","sortBy","column","order","sent","console","t0","message","stop","_x","copyText","text","copy","toast","info","concat","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","name","_useState3","_useState4","avatar","setAvatar","_useState5","_useState6","displayAvatarConfig","setDisplayAvatar","_callee2","email","_yield$supabase$stora2","profilePic","_context2","limit","offset","_jsx","className","children","_jsxs","onClick","AiOutlineClose","src","studname","style","background","split","course","modifiedCourse","replace","trim","studsection","removeCourseAcro","studprogram","BsFillPersonLinesFill","studprogress","studmaxprogress","ojtstart","ojtend","remark","FaBuilding","companyname","companyaddress","supervisorname","supervisorcontactnumber","supervisorofficenumber","companydesignation","companyemail","FaFileImage","map","file","DateConverter","date","created_at","id","studinfo","setHide","open","setOpen","stringToColor","string","i","hash","length","charCodeAt","color","toString","slice","_Fragment","toUpperCase","ViewProfileModal","companyinfos","number","Data","compName","ReactTooltip","menuRef","useRef","setStudInfo","openstudinfo","setOpenStudInfo","_handleGetStudentInformation","_yield$supabase$from$","select","eq","handleGetStudentInformation","hideData","ref","BsFillPersonPlusFill","FaList","StudentData","AOS","duration","showmodalcompany","setShowModalCompany","companyOJT","ViewCompanyModal","place","variant","content","PdfLayout","analytics","avg","testRef","layoutFile","layout","calculateAverateCompleted","overallValue","CompleteValue","InCompleteValue","avgCOM","Math","round","avgINCOM","PieChart","title","value","index","completed","incomplete","BarChart","xAxis","scaleType","series","width","height","BSITCom","BSITInCom","BSTMCom","BSTMInCom","BSHMCom","BSHMInCom","BSAISCom","BSAISInCom","BSCPECom","BSCPEInCom","BSCSCom","BSCSInCom","stilogo","alt","textCapital","capital","array","setAnalytics","showdata","setShowData","setAvg","_useState7","_useState8","moreinformaiton","setMoreInformation","divRef","handleClickOutside","event","current","contains","target","_Analytics","colors","holder","store","_index2","sort","a","b","DataTop1","t1","call","t2","Analytics","document","addEventListener","removeEventListener","compname","masterlistcom","complete","_yield$supabase$from$2","masterlistincom","incom","com","ITcom","TMcom","AIScom","HMcom","CPEcom","CScom","_index","count","match","status","filterby","abrupt","ReactToPrint","trigger","MdLocalPrintshop","documentTitle","window","innerWidth","MoonLoader","speedMultiplier","setFetchError","setStudCompanyInfos","searchTerm","setSearchTerm","setCount","_useState9","_useState10","openTable","setOpenTable","fetchcompanyinfo","channel","on","schema","table","payload","subscribe","_useState11","_useState12","pageNumber","setPageNumber","pageVisited","pageCount","ceil","Backdrop","sx","zIndex","drawer","CircularProgress","BsFileEarmarkPostFill","BsFillFileBarGraphFill","xmlns","viewBox","d","type","placeholder","onChange","e","filter","val","toLowerCase","includes","CompanyConfig","ReactPaginate","previousLabel","nextLabel","onPageChange","_ref3","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledLinkClassName","activeLinkClassName","time","moment","format"],"sourceRoot":""}