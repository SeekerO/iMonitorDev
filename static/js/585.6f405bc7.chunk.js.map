{"version":3,"file":"static/js/585.6f405bc7.chunk.js","mappings":"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","sources":["components/Announcement/CreateAnnouncement.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport supabase from \"../iMonitorDBconfig\";\nimport moment from \"moment\";\nimport { BsCheckCircleFill } from \"react-icons/bs\";\nimport { AiOutlineCheck } from \"react-icons/ai\";\nimport Datepicker from \"react-tailwindcss-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.module.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction CreateAnnouncement({ Data }) {\n  // AOS ANIMATION\n  useEffect(() => {\n    AOS.init({ duration: 1000 });\n  }, []);\n\n  const [title, setTitle] = useState(\"\");\n  const [endDate, setendDate] = useState(\"\");\n  const [allow, setAllow] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const [performerror, setPerformError] = useState(\"\");\n  var currDate = moment().format(\"LLL\");\n  var endDateSend = moment(endDate).format(\"LLL\");\n\n  const [isEmpty, setIsEmpty] = useState(false);\n  let [file, setFile] = useState([]);\n  const [filename, setFileName] = useState();\n\n  const handleFileInputChange = (event) => {\n    try {\n      const files = event.target.files;\n      const datafile = event.target.files[0];\n\n      if (files.length > 0) {\n        setIsEmpty(true);\n        setFile(datafile);\n        setFileName(datafile.name);\n      } else {\n        setIsEmpty(false);\n      }\n    } catch (error) {}\n  };\n\n  function handlePostAnnouncement(e) {\n    e.preventDefault();\n    var announcementID = uuidv4();\n    console.log(announcementID);\n    if (\n      title.trim().length === 0 ||\n      endDate.trim().length === 0 ||\n      message.trim().length === 0\n    ) {\n      toast.warning(\"Invalid input\", {\n        position: \"top-center\",\n        autoClose: 1000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n      return;\n    }\n\n    var a = false;\n    const postdata = async () => {\n      if (title.trim() === 0 || message.trim() === 0) {\n        toast.warning(\"Invalid Input\", {\n          position: \"top-center\",\n          autoClose: 1000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n        });\n        return;\n      }\n\n      if (isEmpty === false) {\n        const { data, error } = await supabase\n          .from(\"AnnouncementTable\")\n          .insert([\n            {\n              announcementTitle: announcementID + \".\" + title,\n              announcementAllow: allow,\n              announcementStartDate: currDate,\n              announcementEndDate: endDateSend,\n              announcementMessage: message,\n              PostedBy: Data.beneName,\n            },\n          ]);\n        clear();\n      } else {\n        const imageExtensions = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\"];\n        const documentExtenstions = [\"docx\", \"pdf\", \"ods\", \"pptx\", \"xlsx\"];\n        const fileExtenstion = filename.split(\".\").pop().toLowerCase();\n\n        if (\n          imageExtensions.includes(fileExtenstion) ||\n          documentExtenstions.includes(fileExtenstion)\n        ) {\n          await supabase.storage\n            .from(\"AnnouncementAttachmentFiles\")\n            .upload(title + \"/\" + announcementID + \".\" + filename, file);\n\n          await supabase.from(\"AnnouncementTable\").insert([\n            {\n              announcementTitle: announcementID + \".\" + title,\n              announcementAllow: allow,\n              announcementStartDate: currDate,\n              announcementEndDate: endDateSend,\n              announcementMessage: message,\n            },\n          ]);\n\n          clear();\n        } else {\n          setIsEmpty();\n          toast.warning(\"Invalid File\", {\n            position: \"top-center\",\n            autoClose: 1000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n          });\n          return;\n        }\n      }\n    };\n\n    postdata();\n  }\n\n  function clear() {\n    setIsEmpty(false);\n    handlealert();\n    setAllow(false);\n    setMessage(\"\");\n    setTitle(\"\");\n    setendDate(\"\");\n    setPerformError(\"\");\n    setFile();\n    setFileName();\n  }\n\n  function handlealert() {\n    toast.success(\"Announcement Posted!\", {\n      position: \"top-center\",\n      autoClose: 1000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"light\",\n    });\n  }\n\n  const disablePastDate = () => {\n    const today = new Date();\n    const dd = String(today.getDate() + 1).padStart(2, \"0\");\n    const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    const yyyy = today.getFullYear();\n    return yyyy + \"-\" + mm + \"-\" + dd;\n  };\n\n  return (\n    <>\n      <div className=\" h-screen  w-[100%] text-white  justify-center place-content-center flex\">\n        <form\n          onSubmit={handlePostAnnouncement}\n          className=\"flex-col w-[100%] md:h-[85%] h-[82%] md:mt-3 mt-14 overflow-y-auto p-2 \"\n          data-aos=\"fade-left\"\n          data-aos-duration=\"300\"\n        >\n          <label className=\"text-[30px] font-bold \">CREATE ANNOUNCEMENT</label>\n          <div className=\"mt-14\">\n            <label className=\"pr-5 text-[20px] font-semibold \">\n              TITLE OF ANNOUNCEMENT:\n            </label>\n            <input\n              required\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              type=\"text\"\n              className=\"rounded-md p-2 md:w-[75%] w-[100%] text-black\"\n            />\n          </div>\n          <div className=\"pt-6 flex \">\n            <label className=\"pr-5 text-[20px] font-semibold \">DURATION:</label>\n            <input\n              min={disablePastDate()}\n              required\n              value={endDate}\n              onChange={(e) => setendDate(e.target.value)}\n              type=\"date\"\n              className=\"rounded-md p-2 text-black hover:cursor-pointer\"\n            />\n          </div>\n          <div className=\"flex pt-6 \">\n            <label className=\"pr-5 text-[20px] font-semibold \">\n              ALLOW DROPBOX:\n            </label>\n\n            <input\n              type=\"checkbox\"\n              value={allow}\n              onClick={() => setAllow(!allow)}\n              className=\"w-6 h-6 mt-1 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n            />\n          </div>\n          <div className=\"md:flex grid pt-6 \">\n            <label className=\"pr-5 text-[20px] font-semibold mb-1\">\n              ADD ATTACHMENT:\n            </label>\n\n            <input\n              type=\"file\"\n              accept=\"e.g:.jpg,.jpeg,.png,.gif,.bmp,.docx,.pdf,.ods,.pptx,.xlsx\"\n              onChange={handleFileInputChange}\n            />\n            {isEmpty && (\n              <div className=\"\">\n                <AiOutlineCheck size={25} style={{ fill: \"black\" }} />\n              </div>\n            )}\n          </div>\n\n          <div className=\"pt-6\">\n            <label className=\"pr-5 text-[20px] font-semibold \">MESSSAGE:</label>\n            <textarea\n              required\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              rows=\"10\"\n              className=\"mt-3  p-1 md:w-[97%] w-full text-sm text-gray-900  rounded-md resize-none\"\n              placeholder=\"Write Remaks Here..\"\n            ></textarea>\n          </div>\n          <div>\n            <button className=\"md:w-[97%] w-[100%] h-[35px] mb-[100px] bg-[#0074B7]  rounded-md hover:bg-[#3282b5]\">\n              SEND\n            </button>\n          </div>\n        </form>\n      </div>\n      <ToastContainer limit={1} />\n    </>\n  );\n}\n\nexport default CreateAnnouncement;\n"],"names":["_ref","Data","useEffect","AOS","duration","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","endDate","setendDate","_useState5","_useState6","allow","setAllow","_useState7","_useState8","message","setMessage","_useState9","_useState10","setPerformError","currDate","moment","format","endDateSend","_useState11","_useState12","isEmpty","setIsEmpty","_useState13","_useState14","file","setFile","_useState15","_useState16","filename","setFileName","clear","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","_jsxs","_Fragment","children","_jsx","className","onSubmit","e","preventDefault","announcementID","uuidv4","console","log","trim","length","postdata","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$supabase$from$","imageExtensions","documentExtenstions","fileExtenstion","wrap","_context","prev","next","warning","abrupt","supabase","from","insert","announcementTitle","announcementAllow","announcementStartDate","announcementEndDate","announcementMessage","PostedBy","beneName","sent","data","error","split","pop","toLowerCase","includes","storage","upload","stop","apply","arguments","required","value","onChange","target","type","min","today","Date","dd","String","getDate","padStart","mm","getMonth","getFullYear","disablePastDate","onClick","accept","event","files","datafile","name","AiOutlineCheck","size","style","fill","rows","placeholder","ToastContainer","limit"],"sourceRoot":""}