{"version":3,"file":"static/js/26.50f060a9.chunk.js","mappings":"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","sources":["components/Registration/RegisSuccessModal.jsx","components/Registration/ViewDataPerPerson.jsx","components/Registration/DataExcelConfig.jsx","components/Registration/NoteForBatchUpload.jsx","components/Registration/BatchUpload.jsx","components/Registration/Registration.jsx","../node_modules/ldrs/temp-ts-out/lib/LdrsBaseElement.js","../node_modules/ldrs/temp-ts-out/elements/tailspin.js"],"sourcesContent":["import React from \"react\";\nimport { tailspin } from \"ldrs\";\nimport Check from \"../Monitoring/Check.json\";\nimport Lottie from \"lottie-react\";\ntailspin.register();\n\nexport default function RegisSuccessModal({ visible, onClose, registring }) {\n  if (!visible) return null;\n\n  if (!registring) {\n    setTimeout(() => {\n      onClose(!visible);\n      return;\n    }, 1300);\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex justify-center items-center\">\n      <div\n        className=\"bg-white h-[150px] w-[220px] rounded-md text-black grid justify-center items-center\"\n        data-aos=\"zoom-in\"\n        data-aos-duration=\"1000\"\n      >\n        {!registring ? (\n          <p className=\"text-center mt-[10%]\">\n            <Lottie animationData={Check} className=\"h-[100px]\" />{\" \"}\n          </p>\n        ) : (\n          <div className=\"flex items-center justify-center\">\n            <l-tailspin\n              size=\"70\"\n              stroke=\"5\"\n              speed=\"0.9\"\n              color=\"#145DA0\"\n            ></l-tailspin>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nfunction ViewDataPerPerson({ open, close, data }) {\n  const ExcelDateToJSDate = (serial) => {\n    var utc_days = Math.floor(serial - 25569);\n    var utc_value = utc_days * 86400;\n    var date_info = new Date(utc_value * 1000);\n\n    var fractional_day = serial - Math.floor(serial) + 0.0000001;\n\n    var total_seconds = Math.floor(86400 * fractional_day);\n\n    var seconds = total_seconds % 60;\n\n    total_seconds -= seconds;\n\n    var hours = Math.floor(total_seconds / (60 * 60));\n    var minutes = Math.floor(total_seconds / 60) % 60;\n\n    return (\n      <label>{`${\n        date_info.getDate() +\n        \"/\" +\n        date_info.getMonth() +\n        \"/\" +\n        date_info.getFullYear()\n      }`}</label>\n    );\n  };\n\n  if (!open) return null;\n  return (\n    <div className=\"fixed inset-0 flex justify-center items-center \">\n      <div className=\"bg-black bg-opacity-30 backdrop-blur-[1px] h-[650px] w-[800px]  flex justify-center items-center place-content-center\">\n        <div className=\"bg-slate-200 h-[600px] w-[700px] rounded-md text-black  shadow-lg shadow-black\">\n          <div className=\"flex justify-end  \">\n            <button\n              onClick={() => close(!open)}\n              className=\"  w-[10%] h-[30px] justify-center items-center flex rounded-tr-md font-bold text-black text-[20px] hover:bg-red-400 bg-red-600 group:\"\n            >\n              <AiOutlineClose className=\"\" />\n            </button>\n          </div>\n          <div className=\"p-2\">\n            <h1 className=\"font-bold pl-1 text-[25px] mt-[2%]\">\n              Student Information\n            </h1>\n            <div className=\"p-2 grid grid-cols-2 gap-y-5 gap-x-1 \">\n              <div>\n                <label className=\"font-semibold text-lg\">Fullname: </label>\n                <label>\n                  {data.Firstname} {data.MiddleInitial} {data.Lastname}\n                </label>\n              </div>\n              <div>\n                <label className=\"font-semibold text-lg\">Program: </label>\n                <label>{data.Program}</label>\n              </div>\n              <div>\n                <label className=\"font-semibold text-lg\">Section: </label>\n                <label>{data.Section}</label>\n              </div>\n              <div>\n                <label className=\"font-semibold text-lg\">O365: </label>\n                <label>{data.o365}</label>\n              </div>\n              <div>\n                <label className=\"font-semibold text-lg\">OJT START: </label>\n                <label>{ExcelDateToJSDate(data.ojtStarting)}</label>\n              </div>\n              <div>\n                <label className=\"font-semibold text-lg\">OJT END: </label>\n                <label>{ExcelDateToJSDate(data.ojtEnd)}</label>\n              </div>\n\n              <div>\n                <label className=\"font-semibold text-lg\">Remarks: </label>\n                <label>{data.remarks}</label>\n              </div>\n            </div>\n            <h1 className=\"font-bold pl-1 text-[25px] mt-[10%]\">\n              Company Information\n            </h1>\n            <div className=\"p-2 grid grid-cols-2 gap-y-5 \">\n              <div>\n                <label className=\"font-semibold text-lg\">Company Name: </label>\n                <label>{data.companyname}</label>\n              </div>\n              <div>\n                <label className=\"font-semibold text-lg\">\n                  Company Address:{\" \"}\n                </label>\n                <label>{data.companyaddress}</label>\n              </div>\n              <div>\n                <label className=\"font-semibold text-lg\">\n                  Supervisor Name:{\" \"}\n                </label>\n                <label>{data.supervisorName}</label>\n              </div>\n              <div>\n                <label className=\"font-semibold text-lg\">Designation: </label>\n                <label>{data.designation}</label>\n              </div>\n              <div>\n                <label className=\"font-semibold text-lg\">\n                  Supervisor Contact #:{\" \"}\n                </label>\n                <label>{data.supervisorContact}</label>\n              </div>\n              <div>\n                <label className=\"font-semibold text-lg\">Office Email: </label>\n                <label>{data.officeEmail}</label>\n              </div>\n              <div>\n                <label className=\"font-semibold text-lg\">Office Number: </label>\n                <label>{data.officeNumber}</label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ViewDataPerPerson;\n","import React, { useState } from \"react\";\nimport ViewDataPerPerson from \"./ViewDataPerPerson\";\n\nfunction DataExcelConfig({ data }) {\n  const [viewprofile, setViewProfile] = useState(false);\n\n  return (\n    <>\n      <div\n        onClick={() => setViewProfile(!viewprofile)}\n        key={data.gmail}\n        className=\"grid grid-cols-6 p-1 hover:bg-[#377abe60] cursor-pointer\"\n      >\n     \n        <label className=\"cursor-pointer\"> {data.Firstname}</label>\n        <label className=\"cursor-pointer\">{data.MiddleInitial}</label>\n        <label className=\"cursor-pointer\">{data.Lastname}</label>\n        <label className=\"cursor-pointer\">{data.Suffix}</label>\n        <label className=\"cursor-pointer\">{data.Program}</label>\n        <label className=\"cursor-pointer\">{data.Section}</label>\n      </div>\n      <ViewDataPerPerson\n        open={viewprofile}\n        close={setViewProfile}\n        data={data}\n      />\n    </>\n  );\n}\n\nexport default DataExcelConfig;\n","import React from \"react\";\nimport { RiInformationFill } from \"react-icons/ri\";\n\nfunction NoteForBatchUpload({ visible, close }) {\n  if (!visible) return null;\n  return (\n    <div className=\"fixed inset-0  flex justify-center items-center\">\n      <div className=\"bg-black bg-opacity-5 backdrop-blur-[1px] h-[650px] w-[800px] flex justify-center items-center\">\n        <div className=\"bg-white h-[35%] w-[450px] shadow-lg shadow-black rounded-md flex flex-col place-content-center items-center\">\n          <div className=\"text-center flex-col justify-center items-center flex pb-[20px]\">\n            <RiInformationFill className=\"text-blue-500 text-[50px]  rounded-full   \" />\n            <label className=\"w-[500px]  \">\n              Note: Kindly use this{\" \"}\n              <a\n                className=\"text-blue-600 hover:underline cursor-pointer\"\n                onClick={() =>\n                  window.open(\n                    \"https://ouraqybsyczzrrlbvenz.supabase.co/storage/v1/object/public/Template/BatchFilingTemplate.xlsx\"\n                  )\n                }\n              >\n                \"Batch Filing Template\"\n              </a>{\" \"}\n              when using the registration by batch.\n            </label>\n          </div>\n          <a\n            className=\"hover:text-red-600 cursor-pointer hover:underline text-[15px]\"\n            onClick={() => close(false)}\n          >\n            Close\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NoteForBatchUpload;\n","import React, { useEffect, useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport DataExcelConfig from \"./DataExcelConfig\";\nimport supabase from \"../iMonitorDBconfig\";\nimport moment from \"moment\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { BsFillCloudCheckFill } from \"react-icons/bs\";\nimport NoteForBatchUpload from \"./NoteForBatchUpload\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport Check from \"../Monitoring/Check.json\";\nimport Lottie from \"lottie-react\";\n\nfunction BatchUpload({ visible, close, sy, dataUser }) {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [dataHolder, setDataHolder] = useState();\n  const [displayData, setDisplayData] = useState(false);\n  const [buttonUpload, setButtonUpload] = useState(true);\n  const [uploading, setUploading] = useState(false);\n\n  const [load, setLoad] = useState(0);\n  const [maxload, setMaxLoad] = useState();\n  const [succes, setSucces] = useState(false);\n\n  const [openNote, setOpenNote] = useState(true);\n\n  const readExcel = async (e) => {\n    setSelectedFile(e.target.files[0]);\n\n    if (e.target.files[0] === undefined) {\n      return;\n    }\n\n    if (e.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const data = new Uint8Array(e.target.result);\n        const workbook = XLSX.read(data, { type: \"array\" });\n        const sheetName = workbook.SheetNames[0];\n        const sheet = workbook.Sheets[sheetName];\n        const jsonData = XLSX.utils.sheet_to_json(sheet);\n\n        for (let index = 0; index < jsonData.length; index++) {\n          if (jsonData[index].o365) {\n            break;\n          } else {\n            toast.warn(\"Invalid File!\", {\n              position: \"top-right\",\n              autoClose: 1000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: false,\n              progress: undefined,\n              theme: \"light\",\n            });\n            return;\n          }\n        }\n\n        setDataHolder(jsonData);\n        setButtonUpload(true);\n        setDisplayData(true);\n      };\n      reader.readAsArrayBuffer(e.target.files[0]);\n    }\n  };\n\n  function closemodal() {\n    setSelectedFile();\n    setDataHolder();\n    setDisplayData(false);\n    setOpenNote(true);\n    close(!visible);\n  }\n\n  function ExcelTimeReder(time) {\n    const millisecondsInDay = 24 * 60 * 60 * 1000; // Total milliseconds in a day\n    const milliseconds = time * millisecondsInDay; // Convert Excel time to milliseconds\n    // Create a Moment.js object using milliseconds since Unix epoch\n    const momentObj = moment.utc(milliseconds);\n    // Format the time as HH:MM:SS or HH:MM AM/PM\n    const formattedTime = momentObj.format(\"hh:mm:ss A\");\n    return formattedTime;\n  }\n\n  async function UploadDataExcel() {\n    const { data: studinfo } = await supabase\n      .from(\"StudentInformation\")\n      .select();\n\n    let nameOccurrences = {};\n    let emailOccurrences = {};\n    // // Check Repeated Name\n    // for (let index = 0; index < dataHolder.length; index++) {\n    //   var name =\n    //     dataHolder[index].Firstname +\n    //     `${\n    //       dataHolder[index].MiddleInitial\n    //         ? ` ${dataHolder[index].MiddleInitial} `\n    //         : \" \"\n    //     }` +\n    //     dataHolder[index].Lastname +\n    //     `${dataHolder[index].Suffix ? ` ${dataHolder[index].Suffix} ` : \"\"}`;\n\n    //   if (nameOccurrences[name]) {\n    //     nameOccurrences[name]++;\n    //   } else {\n    //     nameOccurrences[name] = 1;\n    //   }\n    // }\n\n    // // If name is repeated\n    // for (let name in nameOccurrences) {\n    //   if (nameOccurrences[name] > 1) {\n    //     toast.warn(`Input has duplicate names`, {\n    //       position: \"top-right\",\n    //       autoClose: 1000,\n    //       hideProgressBar: false,\n    //       closeOnClick: true,\n    //       pauseOnHover: false,\n    //       progress: undefined,\n    //       theme: \"light\",\n    //     });\n    //     return;\n    //   }\n    // }\n\n    // Check Repeated Email\n    for (let index = 0; index < dataHolder.length; index++) {\n      var email = dataHolder[index].o365;\n\n      if (emailOccurrences[email]) {\n        emailOccurrences[email]++;\n      } else {\n        emailOccurrences[email] = 1;\n      }\n    }\n\n    // If email is repeated\n    for (let email in emailOccurrences) {\n      if (emailOccurrences[email] > 1) {\n        toast.warn(`Input has duplicate emails`, {\n          position: \"top-right\",\n          autoClose: 1000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          progress: undefined,\n          theme: \"light\",\n        });\n        return;\n      }\n    }\n\n    // Check Invalid Date\n    for (let index = 0; index < dataHolder.length; index++) {\n      const moment = require(\"moment\"); // Import Moment.js library\n\n      // Check if the dateString represents a valid date\n      let isValidDateSTART = moment(\n        ExcelDateToJSDate(dataHolder[index].ojtStarting),\n        \"YYYY-MM-DD\",\n        true\n      ).isValid();\n\n      let isValidDateEND = moment(\n        ExcelDateToJSDate(dataHolder[index].ojtEnd),\n        \"YYYY-MM-DD\",\n        true\n      ).isValid();\n\n      if (!isValidDateSTART) {\n        toast.warn(`Invalid Start Date`, {\n          position: \"top-right\",\n          autoClose: 1000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          progress: undefined,\n          theme: \"light\",\n        });\n        return;\n      }\n\n      if (!isValidDateEND) {\n        toast.warn(`Invalid Start Date`, {\n          position: \"top-right\",\n          autoClose: 1000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          progress: undefined,\n          theme: \"light\",\n        });\n        return;\n      }\n    }\n\n    // Check Invalid Date\n    for (let index = 0; index < dataHolder.length; index++) {\n      const moment = require(\"moment\"); // Import Moment.js library\n\n      // Check if the dateString represents a valid date\n      let isValidDateSTART = moment(\n        ExcelDateToJSDate(dataHolder[index].startingtime),\n        \"HH:mm:ss A\",\n        true\n      ).isValid();\n\n      let isValidDateEND = moment(\n        ExcelDateToJSDate(dataHolder[index].endingtime),\n        \"HH:mm:ss A\",\n        true\n      ).isValid();\n\n      if (!isValidDateSTART) {\n        toast.warn(`Invalid Start Time`, {\n          position: \"top-right\",\n          autoClose: 1000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          progress: undefined,\n          theme: \"light\",\n        });\n        return;\n      }\n\n      if (!isValidDateEND) {\n        toast.warn(`Invalid End Time`, {\n          position: \"top-right\",\n          autoClose: 1000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          progress: undefined,\n          theme: \"light\",\n        });\n        return;\n      }\n    }\n\n    // Check Email is already exist in DataBase\n    for (let index = 0; index < studinfo.length; index++) {\n      var name =\n        dataHolder[index]?.Firstname +\n        `${\n          dataHolder[index]?.MiddleInitial\n            ? ` ${dataHolder[index]?.MiddleInitial} `\n            : \" \"\n        }` +\n        dataHolder[index]?.Lastname +\n        `${dataHolder[index]?.Suffix ? ` ${dataHolder[index]?.Suffix} ` : \"\"}`;\n\n      if (dataHolder[index]?.o365 === studinfo[index]?.studemail) {\n        toast.warn(`Input email is already registered`, {\n          position: \"top-right\",\n          autoClose: 1000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          progress: undefined,\n          theme: \"light\",\n        });\n        return;\n      }\n    }\n\n    // Invalid program\n    for (let index = 0; index < dataHolder.length; index++) {\n      switch (dataHolder[index].Program) {\n        case \"BSIT\":\n        case \"BSTM\":\n        case \"BSAIS\":\n        case \"BSHM\":\n        case \"BSCS\":\n        case \"BSCPE\":\n          break;\n        default:\n          toast.warn(`Invalid Program`, {\n            position: \"top-right\",\n            autoClose: 1000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: false,\n            progress: undefined,\n            theme: \"light\",\n          });\n          return;\n      }\n    }\n\n    StoreData();\n  }\n\n  async function StoreData() {\n    let count = 0;\n\n    for (let index = 0; index < dataHolder.length; index++) {\n      let maxprog;\n      var course;\n      if (dataHolder[index].Program === \"BSIT\") {\n        maxprog = 486;\n        course = \"(BSIT)Bachelor of Science in Information Technology\";\n      } else if (dataHolder[index].Program === \"BSAIS\") {\n        maxprog = 600;\n        course = \"(BSAIS)Bachelor of Science in Accounting Information Systems\";\n      } else if (dataHolder[index].Program === \"BSHM\") {\n        maxprog = 600;\n        course = \"(BSHM)Bachelor of Science in Hospitality Management\";\n      } else if (dataHolder[index].Program === \"BSTM\") {\n        maxprog = 600;\n        course = \"(BSTM)Bachelor of Science in Tourism Management\";\n      } else if (dataHolder[index].Program === \"BSCPE\") {\n        maxprog = 486;\n        course = \"(BSCPE)Bachelor of Science in Computer Engineering\";\n      } else if (dataHolder[index].Program === \"BSCS\") {\n        maxprog = 300;\n        course = \"(BSCS)Bachelor of Science in Computer Science\";\n      }\n\n      try {\n        let a;\n        let b;\n        var c;\n        const { data } = await supabase.from(\"CompanyTable\").select();\n\n        for (let index1 = 0; index1 < data.length; index1++) {\n          if (dataHolder[index].companyname === data[index1].companyname) {\n            a = data[index1].id;\n            b = parseInt(data[index1].companyOJT) + 1;\n            c = data[index1].companyname;\n\n            const { data1 } = await supabase\n              .from(\"CompanyTable\")\n              .update({ companyOJT: b })\n              .eq(\"id\", a);\n            break;\n          }\n        }\n\n        var comptimeSTART = ExcelTimeReder(dataHolder[index].startingtime);\n        var comptimeEND = ExcelTimeReder(dataHolder[index].endingtime);\n\n        if (c !== dataHolder[index].companyname) {\n          const { data1 } = await supabase.from(\"CompanyTable\").insert({\n            companyname: dataHolder[index].companyname,\n            companyaddress: dataHolder[index].companyaddress,\n            supervisorname: dataHolder[index].supervisorName,\n            supervisorcontactnumber: dataHolder[index].supervisorContact,\n            supervisorofficenumber: dataHolder[index].officeNumber,\n            companydesignation: dataHolder[index].designation,\n            companyemail: dataHolder[index].officeEmail,\n            startingtime: comptimeSTART,\n            endingtime: comptimeEND,\n            companyOJT: 1,\n          });\n        }\n      } catch (error) {}\n\n      var ojtstart = ExcelDateToJSDate(dataHolder[index].ojtStarting);\n      var ojtend = ExcelDateToJSDate(dataHolder[index].ojtEnd);\n\n      const { data: register, error } = await supabase\n        .from(\"StudentInformation\")\n        .insert([\n          {\n            studname:\n              dataHolder[index].Firstname +\n              `${\n                dataHolder[index].MiddleInitial\n                  ? ` ${dataHolder[index].MiddleInitial} `\n                  : \" \"\n              }` +\n              dataHolder[index].Lastname +\n              `${\n                dataHolder[index].Suffix ? ` ${dataHolder[index].Suffix} ` : \"\"\n              }`,\n            studprogram: course,\n            studemail: dataHolder[index].o365,\n            ojtstart: moment(ojtstart).format(\"l\"),\n            ojtend: moment(ojtend).format(\"l\"),\n            studsection: dataHolder[index].Section,\n            studremarks: dataHolder[index].remarks,\n            companyname: dataHolder[index].companyname,\n            companyaddress: dataHolder[index].companyaddress,\n            supervisorname: dataHolder[index].supervisorName,\n            supervisorcontactnumber: dataHolder[index].supervisorContact,\n            supervisorofficenumber: dataHolder[index].officeNumber,\n            companydesignation: dataHolder[index].designation,\n            companyemail: dataHolder[index].officeEmail,\n            studmaxprogress: maxprog,\n            studprogress: 0,\n            studcourse: dataHolder[index].Program,\n            studSY: sy,\n            created_by: dataUser.beneName,\n          },\n        ]);\n      if (error) {\n        toast.warn(\"Invalid Input!\", {\n          position: \"top-right\",\n          autoClose: 1000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          progress: undefined,\n          theme: \"light\",\n        });\n        return;\n      }\n\n      setUploading(true);\n      count++;\n      setLoad(count);\n      setMaxLoad(dataHolder.length);\n    }\n\n    if (dataHolder.length === count) {\n      setSucces(true);\n\n      setTimeout(() => {\n        setSelectedFile();\n        setDataHolder();\n        setUploading(false);\n        setDisplayData(false);\n        setSucces(false);\n      }, 3000);\n    }\n  }\n\n  function ExcelDateToJSDate(serial) {\n    var utc_days = Math.floor(serial - 25569);\n    var utc_value = utc_days * 86400;\n    var date_info = new Date(utc_value * 1000);\n\n    var fractional_day = serial - Math.floor(serial) + 0.0000001;\n\n    var total_seconds = Math.floor(86400 * fractional_day);\n\n    var seconds = total_seconds % 60;\n\n    total_seconds -= seconds;\n\n    var hours = Math.floor(total_seconds / (60 * 60));\n    var minutes = Math.floor(total_seconds / 60) % 60;\n\n    return new Date(\n      date_info.getFullYear(),\n      date_info.getMonth(),\n      date_info.getDate(),\n      hours,\n      minutes,\n      seconds\n    );\n  }\n  function OpenDisplay() {\n    if (displayData) {\n      setDisplayData(false);\n    }\n  }\n\n  if (!visible) return null;\n  return (\n    <>\n      <div className=\"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex justify-center items-center\">\n        {uploading ? (\n          <div className=\"\">\n            {succes ? (\n              <div className=\" font-semibold h-[200px] w-[400px] text-white bg-[#5885AF] rounded p-2 flex flex-col place-content-center justify-center items-center\">\n                <label className=\"text-[20px] text-center mb-2 \">\n                  <Lottie animationData={Check} className=\"h-[100px]\" />{\" \"}\n                </label>\n              </div>\n            ) : (\n              <div className=\"h-[200px] w-[400px] bg-[#5885AF] text-white rounded p-2 flex flex-col place-content-center justify-center items-center\">\n                <label className=\"font-semibold mb-2\">\n                  Please wait the file is uploading\n                </label>\n\n                <div className=\"md:h-6 h-8 w-[90%]  bg-gray-400 rounded-md  md:mt-1.5 mt-0 cursor-default\">\n                  <div\n                    className=\"md:h-6 h-8 bg-[#78D0F4] rounded-l rounded-r \"\n                    style={{\n                      width: `${(load / maxload) * 100}%`,\n                    }}\n                  ></div>\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className=\"bg-[#274472] h-[650px] w-[800px] rounded-md text-black flex-col flex place-content-center\">\n            <div className=\"flex justify-end \">\n              <button\n                onClick={() => closemodal()}\n                className=\" -mt-0.5 w-[70px] h-[30px] justify-center items-center flex rounded-tr-md font-bold text-black text-[20px] hover:bg-red-400 bg-red-600\"\n              >\n                <AiOutlineClose className=\"\" />\n              </button>\n            </div>\n            <NoteForBatchUpload visible={openNote} close={setOpenNote} />\n            <div className=\"h-[95%] w-[100%]  flex flex-col p-2\">\n              <div className=\"flex gap-2 mt-2 items-center text-white\">\n                <label className=\"font-bold text-[18px] \">\n                  Upload Excel File Here:\n                </label>\n                <input\n                  onClick={() => OpenDisplay()}\n                  onChange={readExcel}\n                  type=\"file\"\n                  accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                />\n              </div>\n\n              <div className=\"bg-slate-300 h-[550px] p-1 rounded-sm mt-1 shadow-md shadow-black\">\n                {displayData ? (\n                  <div className=\"grid grid-cols-6 p-1 font-semibold\">\n                    <label>FirstName</label>\n                    <label>M.I</label>\n                    <label>LastName</label>\n                    <label>Suffix</label>\n                    <label>Program</label>\n                    <label>Section</label>\n                  </div>\n                ) : (\n                  <div className=\"flex place-content-center items-center h-[100%]\">\n                    Data will be display here (\n                    <a\n                      className=\"hover:text-blue-700 cursor-pointer hover:underline\"\n                      onClick={() => setOpenNote(!openNote)}\n                    >\n                      Get Template\n                    </a>\n                    )\n                  </div>\n                )}\n                {displayData && (\n                  <div className=\"h-[420px] overflow-y-auto md:text-base text-sm\">\n                    {dataHolder.map((data, index) => (\n                      <DataExcelConfig key={index} data={data} />\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              {displayData && (\n                <button\n                  onClick={() => UploadDataExcel()}\n                  className=\"bg-[#5885AF] text-white hover:bg-green-600  h-fit p-2 mt-1 rounded-sm\"\n                >\n                  Register\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n      <ToastContainer limit={1} />\n    </>\n  );\n}\n\nexport default BatchUpload;\n","import React, { useState, useEffect } from \"react\";\nimport RegisSuccessModal from \"./RegisSuccessModal\";\nimport options from \"../programoptions.json\";\nimport supabase from \"../iMonitorDBconfig\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport BatchUpload from \"./BatchUpload\";\nimport { BsFiles } from \"react-icons/bs\";\nimport moment from \"moment\";\n\nfunction Registration({ dataUser }) {\n  useEffect(() => {\n    fetchcompanyinfo();\n    getStudentInfo();\n    AOS.init();\n  }, []);\n\n  const [sy, setSY] = useState();\n\n  //MODAL VAR\n  const [showmodalregis, setShowModalRegis] = useState(false);\n\n  //STUD INFO VAR\n  const [studfname, setStudFName] = useState(\"\");\n  const [studlname, setStudLName] = useState(\"\");\n  const [studmname, setStudMName] = useState(\"\");\n  const [studsuffix, setStudSuffix] = useState(\"\");\n  const [studprogram, setStudProgram] = useState(\"\");\n  const [studemail, setStudemail] = useState(\"\");\n  const [ojtstart, setOjtStart] = useState(\"\");\n  const [ojtend, setOjtEnd] = useState(\"\");\n  const [studsection, setStudSection] = useState(\"\");\n  const [studremarks, setStudRemarks] = useState(\"\");\n\n  // //Company name var\n  const [value, setValue] = useState(\"\");\n  const [companyinfos, setStudCompanyInfos] = useState(\"\");\n  const [startTime, setStartTime] = useState();\n  const [endTime, setEndTime] = useState();\n  const [companyaddress, setCompanyaddress] = useState(\"\");\n  const [supervisorname, setSupervisorname] = useState(\"\");\n  const [supervisorcontactnumber, setSupervisorcontactnumber] = useState(\"\");\n  const [supervisorofficenumber, setSupervisorofficenumber] = useState(\"\");\n  const [designation, setDesignation] = useState(\"\");\n  const [companyemail, setCompanyemail] = useState(\"\");\n\n  const [formSuccess, setFormSuccess] = useState(\"\");\n\n  // Student Info\n  const [studinfo, setStudinfo] = useState();\n\n  // Bene Info\n  const [beneinfo, setBeneInfo] = useState();\n\n  // Open Batch Upload Modal\n  const [batchupload, setBatchUpload] = useState(false);\n\n  const [registring, setIsRegistring] = useState(false);\n\n  const [closeSuggestion, setCloseSuggestion] = useState();\n\n  useEffect(() => {\n    fetchcompanyinfo();\n    var curryear = moment().year();\n    var nextyear = curryear + 1;\n    setSY(\"S.Y. \" + curryear + \"-\" + nextyear);\n  }, [formSuccess]);\n\n  async function getStudentInfo() {\n    const { data: stud } = await supabase.from(\"StudentInformation\").select();\n    setStudinfo(stud);\n    const { data: bene } = await supabase.from(\"BeneAccount\").select();\n    setBeneInfo(bene);\n  }\n\n  function clearfield() {\n    //information\n    setStudFName(\"\");\n    setStudLName(\"\");\n    setStudMName(\"\");\n    setStudProgram(\"\");\n    setStudSection(\"\");\n    setOjtStart(\"\");\n    setOjtEnd(\"\");\n    setStudemail(\"\");\n    setStudRemarks(\"\");\n    //company\n    setValue(\"\");\n    setCompanyaddress(\"\");\n    setSupervisorname(\"\");\n    setSupervisorcontactnumber(\"\");\n    setSupervisorofficenumber(\"\");\n    setDesignation(\"\");\n    setCompanyemail(\"\");\n    setStartTime(\"\");\n    setEndTime(\"\");\n  }\n\n  function isValidEmail(email) {\n    return /\\S+@stamaria\\.sti\\.edu\\.ph$/.test(email);\n  }\n\n  var insert = false;\n  // INSERT FUNCTION\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (\n      studfname.trim().length === 0 ||\n      studlname.trim().length === 0 ||\n      studemail.trim().length === 0 ||\n      studprogram.trim().length === 0 ||\n      studsection.trim().length === 0 ||\n      !ojtstart ||\n      !ojtend ||\n      value.trim().length === 0 ||\n      companyaddress.trim().length === 0 ||\n      supervisorname.trim().length === 0 ||\n      supervisorcontactnumber.trim().length === 0 ||\n      supervisorofficenumber.trim().length === 0 ||\n      designation.trim().length === 0 ||\n      companyemail.trim().length === 0\n    ) {\n      toast.warning(\"No Empty Input\", {\n        position: \"top-right\",\n        autoClose: 1000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n\n      return;\n    }\n\n    if (!isValidEmail(studemail)) {\n      toast.warning(\"Invalid Email\", {\n        position: \"top-right\",\n        autoClose: 1000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n      return;\n    }\n\n    if (studemail) {\n      for (let index = 0; index < studinfo.length; index++) {\n        if (studinfo[index].studemail === studemail) {\n          toast.warn(\"Please use different Email\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            limit: 1,\n            theme: \"light\",\n          });\n          return;\n        }\n      }\n      for (let index = 0; index < beneinfo.length; index++) {\n        if (beneinfo[index].beneEmail === studemail) {\n          toast.warn(\"Please use different Email\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            limit: 1,\n            theme: \"light\",\n          });\n          return;\n        }\n      }\n    }\n    setIsRegistring(true);\n    setShowModalRegis(true);\n    if (studmname === null) {\n      setStudMName(\"\");\n    }\n\n    if (studremarks === null) {\n      setStudRemarks(null);\n    }\n\n    FilterCompany();\n\n    var studfullname =\n      studfname +\n      `${studmname === \"\" ? \" \" : ` ${studmname} `}` +\n      studlname +\n      \" \" +\n      `${studsuffix === \"\" ? \" \" : ` ${studsuffix} `}`;\n    var program = studprogram.toString();\n    var studcourse;\n    let studmaxduration;\n    let studprogress = 0;\n\n    if (program === \"(BSIT)Bachelor of Science in Information Technology\") {\n      studmaxduration = 486;\n      studcourse = \"BSIT\";\n    }\n    if (\n      program === \"(BSAIS)Bachelor of Science in Accounting Information Systems\"\n    ) {\n      studmaxduration = 600;\n      studcourse = \"BSAIS\";\n    }\n    if (program === \"(BSHM)Bachelor of Science in Hospitality Management\") {\n      studmaxduration = 600;\n      studcourse = \"BSHM\";\n    }\n    if (program === \"(BSTM)Bachelor of Science in Tourism Management\") {\n      studmaxduration = 600;\n      studcourse = \"BSTM\";\n    }\n    if (program === \"(BSCPE)Bachelor of Science in Computer Engineering\") {\n      studmaxduration = 486;\n      studcourse = \"BSCPE\";\n    }\n    if (program === \"(BSCS)Bachelor of Science in Computer Science\") {\n      studmaxduration = 300;\n      studcourse = \"BSCS\";\n    }\n\n    const { data, error } = await supabase.from(\"StudentInformation\").insert([\n      {\n        studname: studfullname,\n        studprogram: program,\n        studemail: studemail,\n        ojtstart: ojtstart,\n        ojtend: ojtend,\n        studsection: studsection,\n        studremarks: studremarks,\n        companyname: value,\n        companyaddress: companyaddress,\n        supervisorname: supervisorname,\n        supervisorcontactnumber: supervisorcontactnumber,\n        supervisorofficenumber: supervisorofficenumber,\n        companydesignation: designation,\n        companyemail: companyemail,\n        studmaxprogress: studmaxduration,\n        studprogress: studprogress,\n        studcourse: studcourse,\n        studSY: sy,\n        created_by: dataUser.beneName,\n      },\n    ]);\n\n    if (error) {\n      setFormSuccess(null);\n    }\n\n    clearfield();\n    setIsRegistring(false);\n  };\n\n  const FilterCompany = async () => {\n    try {\n      let a;\n      let b;\n      var c;\n      const { data } = await supabase.from(\"CompanyTable\").select();\n\n      for (let index1 = 0; index1 < data.length; index1++) {\n        if (value === data[index1].companyname) {\n          a = data[index1].id;\n          b = parseInt(data[index1].companyOJT) + 1;\n          c = data[index1].companyname;\n\n          const { data1 } = await supabase\n            .from(\"CompanyTable\")\n            .update({ companyOJT: b })\n            .eq(\"id\", a);\n          break;\n        }\n      }\n\n      if (c !== value) {\n        const { data1 } = await supabase.from(\"CompanyTable\").insert({\n          companyname: value,\n          companyaddress: companyaddress,\n          supervisorname: supervisorname,\n          supervisorcontactnumber: supervisorcontactnumber,\n          supervisorofficenumber: supervisorofficenumber,\n          companydesignation: designation,\n          companyemail: companyemail,\n          companyOJT: 1,\n          startingtime: startTime,\n          endingtime: endTime,\n        });\n      }\n    } catch (error) {}\n  };\n\n  const fetchcompanyinfo = async () => {\n    const { data, error } = await supabase.from(\"CompanyTable\").select();\n    if (error) {\n      console.log(error);\n    }\n    if (data) {\n      setStudCompanyInfos(data);\n    }\n  };\n\n  //filter comapanyname\n\n  const onChange = (event) => {\n    setValue(event.target.value);\n    setCloseSuggestion(true);\n  };\n\n  const onSearch = (searchTerm) => {\n    setValue(searchTerm);\n  };\n\n  const disablePastDate = () => {\n    const today = new Date();\n    const dd = String(today.getDate() + 1).padStart(2, \"0\");\n    const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    const yyyy = today.getFullYear();\n    return yyyy + \"-\" + mm + \"-\" + dd;\n  };\n\n  const emailFill = (e) => {\n    const inputValue = e.target.value;\n\n    if (\n      inputValue.endsWith(\"@\") &&\n      !inputValue.endsWith(\"tamaria.sti.edu.ph\")\n    ) {\n      setStudemail(inputValue + \"stamaria.sti.edu.ph\");\n    } else {\n      setStudemail(inputValue);\n    }\n  };\n\n  const setProgramToAcro = (e) => {\n    setStudProgram(e.target.value);\n    for (let index = 0; index < options.length; index++) {\n      if (options[index].Program === e.target.value) {\n        setStudSection(options[index].Acro);\n        return;\n      }\n    }\n  };\n  return (\n    <>\n      <div className=\"overflow-hidden md:pt-[2%] pt-[5%] \">\n        <div\n          className=\"pt-5 text-white h-screen\"\n          data-aos=\"fade-down\"\n          data-aos-duration=\"300\"\n        >\n          <div className=\"md:flex grid items-center p-4 \">\n            <header className=\"font-bold md:text-4xl text-3xl mb-4 pl-1\">\n              REGISTRATION\n            </header>\n            <div className=\"flex justify-between w-[100%] \">\n              <a\n                onClick={() => setBatchUpload(!batchupload)}\n                className=\"md:pl-5 pl-0 hover:underline hover:text-blue-500 cursor-pointer text-sm flex gap-1 items-center\"\n              >\n                <BsFiles /> Batch Upload\n              </a>\n              <label className=\"font-sans font-light\">{sy}</label>\n            </div>\n          </div>\n\n          <form\n            onSubmit={handleSubmit}\n            className=\"grid  w-[100%] bg-black bg-opacity-[2%] overflow-y-auto\n             overflow-x-hidden max-h-[68%] md:pl-5 pl-1 md:pr-5 pr-1\"\n            data-aos=\"fade-down\"\n            data-aos-duration=\"1000\"\n          >\n            {/* Line 1 */}\n            <div className=\"w-[100%] md:flex grid  gap-1 h-fit mt-1\">\n              <label className=\"font-semibold text-[20px] md:w-[10%] w-[100%]\">\n                FULL NAME:\n              </label>\n              <div className=\" md:flex flex-grow grid gap-y-5 gap-2 w-fill\">\n                <input\n                  required\n                  type=\"text\"\n                  className=\"rounded-md p-1 w-[100%]  text-black \"\n                  placeholder=\"First Name\"\n                  id=\"studfname\"\n                  value={studfname}\n                  onChange={(e) => setStudFName(e.target.value)}\n                ></input>\n                <input\n                  type=\"text\"\n                  className=\"rounded-md p-1 md:w-[10%] w-[100%]  text-black\"\n                  placeholder=\"M.I\"\n                  id=\"studmname\"\n                  value={studmname}\n                  onChange={(e) => setStudMName(e.target.value)}\n                ></input>\n                <input\n                  required\n                  type=\"text\"\n                  className=\"rounded-md p-1 w-[100%] text-black\"\n                  placeholder=\"Last Name\"\n                  id=\"studlname\"\n                  value={studlname}\n                  onChange={(e) => setStudLName(e.target.value)}\n                ></input>\n                <input\n                  type=\"text\"\n                  className=\"rounded-md p-1 md:w-[10%] w-[100%] text-black\"\n                  placeholder=\"Suffix\"\n                  value={studsuffix}\n                  onChange={(e) => setStudSuffix(e.target.value)}\n                ></input>\n              </div>\n            </div>\n            {/* Line 2 */}\n            <div className=\"grid md:flex grid-cols-1  gap-4 pt-4 w-[100%]\">\n              <label className=\"font-semibold text-[19px]\">PROGRAM</label>\n\n              <div className=\"w-[100%]\">\n                <select\n                  required\n                  value={studprogram}\n                  className=\"w-full text-black rounded-md pl-2 text-justify p-1\"\n                  onChange={(e) => setProgramToAcro(e)}\n                >\n                  {options.map((options) => (\n                    <option key={options.id} className=\"pt-4 text-black\">\n                      {options.Program}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <label className=\"font-semibold text-[19px]\">SECTION</label>\n              <input\n                required\n                value={studsection}\n                onChange={(e) => setStudSection(e.target.value)}\n                type=\"text\"\n                placeholder=\"Enter Section\"\n                className=\"rounded-md w-[100%] text-black pl-2 p-1\"\n              ></input>\n            </div>\n            {/* Line 3 */}\n            <div className=\"grid md:flex grid-cols-1  gap-4 pt-4 w-[100%]\">\n              <label className=\"font-semibold text-[19px] w-[26%]\">\n                OJT STARTING\n              </label>\n              <input\n                min={disablePastDate()}\n                required\n                value={ojtstart}\n                type=\"date\"\n                className=\"rounded-md md:w-[100%] min-w-[395px] h-[32px] text-black pl-2\"\n                onChange={(e) => setOjtStart(e.target.value)}\n              />\n              <label className=\"font-semibold text-[19px] w-[20%]\">\n                OJT END\n              </label>\n              <input\n                min={disablePastDate()}\n                required\n                value={ojtend}\n                type=\"date\"\n                className=\"rounded-md md:w-[100%] min-w-[395px] text-black pl-2\"\n                onChange={(e) => setOjtEnd(e.target.value)}\n              />\n            </div>\n            {/* Line 4 */}\n            <div className=\"grid md:flex grid-cols-1 w-[100%]  gap-4 pt-4\">\n              <label className=\"font-semibold text-[19px] w-[5%]\">O365</label>\n              <input\n                onClick={() => setStudemail(\"\")}\n                required\n                type=\"email\"\n                className=\"rounded-md p-1 w-[100%]  text-black\"\n                value={studemail}\n                onChange={(e) => emailFill(e)}\n                placeholder=\"example123456@stamaria.sti.edu.ph\"\n              ></input>\n            </div>\n            {/* Line 5 */}\n            <div className=\"grid md:flex grid-cols-1  gap-4 pt-4 mb-10\">\n              <label className=\"font-semibold text-[19px] w-[6%]\">\n                REMARKS\n              </label>\n              <textarea\n                rows=\"4\"\n                className=\"p-1 w-[100%] text-sm text-gray-900  rounded-md\"\n                placeholder=\"Write Remaks Here..\"\n                value={studremarks}\n                onChange={(e) => setStudRemarks(e.target.value)}\n              ></textarea>\n            </div>\n            {/* Line 6  */}\n            <label className=\"font-semibold text-[25px] \">\n              COMPANY INFORMATION\n            </label>\n            {/* Line 7 */}\n            <div className=\"flex  gap-5 pt-2\">\n              <label className=\"gap-3 flex font-semibold text-[19px] \">\n                START TIME\n                <input\n                  value={startTime}\n                  onChange={(e) => setStartTime(e.target.value)}\n                  required\n                  type=\"time\"\n                  className=\"rounded-md text-black pl-1 h-[30px] \"\n                />\n              </label>\n              <label className=\"gap-3 flex font-semibold text-[19px]\">\n                END TIME\n                <input\n                  value={endTime}\n                  onChange={(e) => setEndTime(e.target.value)}\n                  required\n                  type=\"time\"\n                  className=\"rounded-md text-black pl-1 h-[30px] \"\n                />\n              </label>\n            </div>\n            <div className=\"grid md:flex grid-cols-1 w-[100%]  gap-4 pt-4\">\n              <label className=\"font-semibold text-[19px] md:w-[15%] w-[100%]\">\n                COMPANY NAME\n              </label>\n\n              <div className=\" w-[100%] text-black  \">\n                <input\n                  required\n                  value={value}\n                  onChange={onChange}\n                  type=\"text\"\n                  placeholder=\"Enter Company Name\"\n                  className=\"rounded-md w-[100%] h-[32px] md:h-7 text-black pl-2\"\n                />\n                {closeSuggestion && (\n                  <>\n                    {companyinfos && (\n                      <div className=\"overflow-auto w-[100%] max-h-24 rounded-md  \">\n                        {companyinfos\n                          .filter((item) => {\n                            const searchTerm = value.toLowerCase();\n                            const companyname = item.companyname.toLowerCase();\n\n                            return (\n                              searchTerm &&\n                              companyname.includes(searchTerm) &&\n                              companyname !== searchTerm\n                            );\n                          })\n\n                          .map((companyinfos) => (\n                            <div\n                              className=\" w-[100%] p-1 bg-slate-200 \"\n                              key={companyinfos.id}\n                            >\n                              <p\n                                onClick={() =>\n                                  onSearch(companyinfos.companyname) ||\n                                  setCompanyaddress(\n                                    companyinfos.companyaddress\n                                  ) ||\n                                  setSupervisorname(\n                                    companyinfos.supervisorname\n                                  ) ||\n                                  setSupervisorcontactnumber(\n                                    companyinfos.supervisorcontactnumber\n                                  ) ||\n                                  setSupervisorofficenumber(\n                                    companyinfos.supervisorofficenumber\n                                  ) ||\n                                  setDesignation(\n                                    companyinfos.companydesignation\n                                  ) ||\n                                  setCompanyemail(companyinfos.companyemail) ||\n                                  setStartTime(companyinfos.startingtime) ||\n                                  setEndTime(companyinfos.endingtime) ||\n                                  setCloseSuggestion(!closeSuggestion)\n                                }\n                                className=\"hover:bg-blue-400  rounded-md w-[100%]\"\n                              >\n                                {companyinfos.companyname}\n                              </p>\n                            </div>\n                          ))}\n                      </div>\n                    )}\n                  </>\n                )}\n              </div>\n            </div>\n            {/* Line 8 */}\n\n            <div className=\"grid md:flex grid-cols-1 w-[100%] gap-4 pt-4\">\n              <label className=\"font-semibold text-[19px] w-[100%] md:w-[17%]\">\n                COMPANY ADDRESS\n              </label>\n              <input\n                required\n                value={companyaddress}\n                onChange={(e) => setCompanyaddress(e.target.value)}\n                type=\"text\"\n                placeholder=\"Enter Company Address\"\n                className=\"rounded-md w-[100%] h-[32px] md:h-7 text-black pl-2\"\n              />\n            </div>\n            {/* Line 9 */}\n            <div className=\"grid md:flex grid-cols-1 w-[100%] gap-4 pt-4\">\n              <label className=\"font-semibold text-[19px] w-[39%] \">\n                SUPERVISOR NAME\n              </label>\n              <input\n                required\n                value={supervisorname}\n                onChange={(e) => setSupervisorname(e.target.value)}\n                type=\"text\"\n                placeholder=\"Enter Supervisor Name\"\n                className=\"rounded-md w-[100%] h-[32px]  text-black pl-2\"\n              ></input>\n              <label className=\"font-semibold text-[19px] w-[15%]\">\n                DESIGNATION\n              </label>\n              <input\n                required\n                value={designation}\n                onChange={(e) => setDesignation(e.target.value)}\n                type=\"text\"\n                placeholder=\"Enter Designation\"\n                className=\"rounded-md w-[100%] text-black pl-2 h-[32px]\"\n              ></input>\n            </div>\n            {/* Line 10 */}\n            <div className=\"grid md:flex grid-cols-1 w-[100%] gap-4 pt-4 mb-3\">\n              <label className=\"font-semibold text-[19px]  w-[55%]\">\n                SUPERVISOR CONTACT #\n              </label>\n              <input\n                required\n                value={supervisorcontactnumber}\n                onChange={(e) => setSupervisorcontactnumber(e.target.value)}\n                type=\"text\"\n                placeholder=\"Enter Supervisor Contact #\"\n                className=\"rounded-md w-[100%] h-[32px] text-black pl-2\"\n              ></input>\n              <label className=\"font-semibold text-[19px]  w-[100%] md:w-[30%] mb-3 \">\n                OFFICE EMAIL\n              </label>\n              <input\n                required\n                value={companyemail}\n                onChange={(e) => setCompanyemail(e.target.value)}\n                type=\"text\"\n                placeholder=\"Enter Office Email\"\n                className=\"rounded-md w-[100%]  h-[32px] text-black pl-2\"\n              ></input>\n            </div>\n            {/* Line 11 */}\n\n            <div className=\"w-[100%] md:flex grid\">\n              <label className=\"font-semibold text-[19px] w-[15%]\">\n                OFFICE NUMBER\n              </label>\n\n              <input\n                required\n                value={supervisorofficenumber}\n                onChange={(e) => setSupervisorofficenumber(e.target.value)}\n                type=\"text\"\n                placeholder=\"Enter Office Number\"\n                className=\"rounded-md w-[100%] text-black pl-2 h-[32px]\"\n              ></input>\n            </div>\n            <button\n              disabled={registring}\n              className={`${\n                registring ? \"bg-gray-500\" : \"bg-[#145DA0] hover:bg-blue-400\"\n              }  w-[99.9%] h-[40px] rounded-md font-bold  mb-10 mt-2`}\n            >\n              REGISTER\n            </button>\n          </form>\n        </div>\n        <RegisSuccessModal\n          onClose={setShowModalRegis}\n          visible={showmodalregis}\n          registring={registring}\n        />\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          limit={1}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          theme=\"light\"\n        />\n        <BatchUpload visible={batchupload} close={setBatchUpload} sy={sy} dataUser={dataUser} />\n      </div>\n    </>\n  );\n}\n\nexport default Registration;\n","export default class LdrsBaseElement extends HTMLElement {\n    _propsToUpgrade = {};\n    shadow;\n    template;\n    defaultProps;\n    isAttached = false;\n    constructor() {\n        super();\n        this.shadow = this.attachShadow({ mode: 'open' });\n        this.template = document.createElement('template');\n    }\n    storePropsToUpgrade(props) {\n        props.forEach((prop) => {\n            if (this.hasOwnProperty(prop) && typeof this[prop] !== 'undefined') {\n                this._propsToUpgrade[prop] = this[prop];\n                delete this[prop];\n            }\n        });\n    }\n    upgradeStoredProps() {\n        Object.entries(this._propsToUpgrade).forEach(([key, val]) => {\n            this.setAttribute(key, val);\n        });\n    }\n    reflect(props) {\n        props.forEach((prop) => {\n            Object.defineProperty(this, prop, {\n                set(val) {\n                    if ('string,number'.includes(typeof val)) {\n                        this.setAttribute(prop, val.toString());\n                    }\n                    else {\n                        this.removeAttribute(prop);\n                    }\n                },\n                get() {\n                    return this.getAttribute(prop);\n                },\n            });\n        });\n    }\n    applyDefaultProps(props) {\n        this.defaultProps = props;\n        Object.entries(props).forEach(([key, defaultValue]) => {\n            this[key] = this[key] || defaultValue.toString();\n        });\n    }\n}\n","import Base from '../lib/LdrsBaseElement.js';\nimport styles from './tailspin.scss';\nclass Tailspin extends Base {\n    _attributes = ['size', 'color', 'speed', 'stroke'];\n    size;\n    color;\n    speed;\n    stroke;\n    static get observedAttributes() {\n        return ['size', 'color', 'speed', 'stroke'];\n    }\n    constructor() {\n        super();\n        this.storePropsToUpgrade(this._attributes);\n        this.reflect(this._attributes);\n    }\n    connectedCallback() {\n        this.upgradeStoredProps();\n        this.applyDefaultProps({\n            size: 40,\n            color: 'black',\n            speed: 0.9,\n            stroke: 5,\n        });\n        this.template.innerHTML = `\n      <div class=\"container\"></div>\n      <style>\n        :host{\n          --uib-size: ${this.size}px;\n          --uib-color: ${this.color};\n          --uib-speed: ${this.speed}s;\n          --uib-stroke: ${this.stroke}px;\n        }\n        ${styles}\n      </style>\n    `;\n        this.shadow.replaceChildren(this.template.content.cloneNode(true));\n    }\n    attributeChangedCallback() {\n        const styleEl = this.shadow.querySelector('style');\n        if (!styleEl)\n            return;\n        styleEl.innerHTML = `\n      :host{\n        --uib-size: ${this.size}px;\n        --uib-color: ${this.color};\n        --uib-speed: ${this.speed}s;\n        --uib-stroke: ${this.stroke}px;\n      }\n      ${styles}\n    `;\n    }\n}\nexport default {\n    register: (name = 'l-tailspin') => {\n        if (!customElements.get(name)) {\n            customElements.define(name, class extends Tailspin {\n            });\n        }\n    },\n    element: Tailspin,\n};\n"],"names":["RegisSuccessModal","_ref","visible","onClose","registring","setTimeout","_jsx","className","children","size","stroke","speed","color","_jsxs","Lottie","animationData","Check","tailspin","register","open","close","data","ExcelDateToJSDate","serial","utc_days","Math","floor","date_info","Date","fractional_day","total_seconds","concat","getDate","getMonth","getFullYear","onClick","AiOutlineClose","Firstname","MiddleInitial","Lastname","Program","Section","o365","ojtStarting","ojtEnd","remarks","companyname","companyaddress","supervisorName","designation","supervisorContact","officeEmail","officeNumber","_useState","useState","_useState2","_slicedToArray","viewprofile","setViewProfile","_Fragment","Suffix","gmail","ViewDataPerPerson","RiInformationFill","window","sy","dataUser","setSelectedFile","_useState3","_useState4","dataHolder","setDataHolder","_useState5","_useState6","displayData","setDisplayData","_useState7","_useState8","setButtonUpload","_useState9","_useState10","uploading","setUploading","_useState11","_useState12","load","setLoad","_useState13","_useState14","maxload","setMaxLoad","_useState15","_useState16","succes","setSucces","_useState17","_useState18","openNote","setOpenNote","readExcel","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","reader","wrap","_context","prev","next","target","files","undefined","abrupt","FileReader","onload","Uint8Array","result","workbook","XLSX","type","sheetName","SheetNames","sheet","Sheets","jsonData","sheet_to_json","index","length","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","progress","theme","readAsArrayBuffer","stop","_x","apply","arguments","ExcelTimeReder","time","milliseconds","moment","format","_UploadDataExcel","_callee2","_yield$supabase$from$","studinfo","emailOccurrences","email","_email","_index","_moment","isValidDateSTART","isValidDateEND","_index2","_moment2","_isValidDateSTART","_isValidDateEND","_index3","_dataHolder$_index","_dataHolder$_index2","_dataHolder$_index3","_dataHolder$_index4","_dataHolder$_index5","_dataHolder$_index6","_dataHolder$_index7","_studinfo$_index","_index4","_context2","supabase","from","select","sent","t0","keys","t1","done","value","require","isValid","startingtime","endingtime","studemail","t2","StoreData","_StoreData","_callee3","count","maxprog","course","a","b","c","_yield$supabase$from$2","index1","_yield$supabase$from$3","comptimeSTART","comptimeEND","_yield$supabase$from$4","ojtstart","ojtend","_yield$supabase$from$5","_context3","id","parseInt","companyOJT","update","eq","data1","insert","supervisorname","supervisorcontactnumber","supervisorofficenumber","companydesignation","companyemail","studname","studprogram","studsection","studremarks","studmaxprogress","studprogress","studcourse","studSY","created_by","beneName","error","seconds","hours","minutes","style","width","NoteForBatchUpload","onChange","accept","map","DataExcelConfig","UploadDataExcel","ToastContainer","limit","useEffect","fetchcompanyinfo","_getStudentInfo","getStudentInfo","AOS","setSY","showmodalregis","setShowModalRegis","studfname","setStudFName","studlname","setStudLName","studmname","setStudMName","studsuffix","setStudSuffix","setStudProgram","setStudemail","setOjtStart","_useState19","_useState20","setOjtEnd","_useState21","_useState22","setStudSection","_useState23","_useState24","setStudRemarks","_useState25","_useState26","setValue","_useState27","_useState28","companyinfos","setStudCompanyInfos","_useState29","_useState30","startTime","setStartTime","_useState31","_useState32","endTime","setEndTime","_useState33","_useState34","setCompanyaddress","_useState35","_useState36","setSupervisorname","_useState37","_useState38","setSupervisorcontactnumber","_useState39","_useState40","setSupervisorofficenumber","_useState41","_useState42","setDesignation","_useState43","_useState44","setCompanyemail","_useState45","_useState46","formSuccess","setFormSuccess","_useState47","_useState48","setStudinfo","_useState49","_useState50","beneinfo","setBeneInfo","_useState51","_useState52","batchupload","setBatchUpload","_useState53","_useState54","setIsRegistring","_useState55","_useState56","closeSuggestion","setCloseSuggestion","_callee4","_yield$supabase$from$6","stud","_yield$supabase$from$7","bene","_context4","curryear","year","handleSubmit","studfullname","program","studmaxduration","preventDefault","trim","warning","draggable","test","beneEmail","FilterCompany","toString","_ref3","_ref4","console","log","disablePastDate","today","dd","String","padStart","mm","BsFiles","onSubmit","required","placeholder","options","Acro","setProgramToAcro","min","inputValue","endsWith","emailFill","rows","event","filter","item","searchTerm","toLowerCase","includes","disabled","newestOnTop","rtl","pauseOnFocusLoss","BatchUpload","t","_HTMLElement","_inherits","_super","_createSuper","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","shadow","attachShadow","mode","template","document","createElement","_createClass","key","_this2","forEach","hasOwnProperty","_propsToUpgrade","_this3","Object","entries","this","setAttribute","_this4","defineProperty","set","removeAttribute","get","getAttribute","_this5","defaultProps","_wrapNativeSuper","HTMLElement","s","_e","storePropsToUpgrade","_attributes","reflect","upgradeStoredProps","applyDefaultProps","innerHTML","replaceChildren","content","cloneNode","querySelector","i","customElements","define","_s","_class","_super2","element"],"sourceRoot":""}